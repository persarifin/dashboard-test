{"ast":null,"code":"// import replace from \"lodash/replace\";\nvar replace = require(\"lodash/replace\");\n\nvar decodeNum = function decodeNum(num, index) {\n  switch (num) {\n    case 1:\n      // if (index == 0)\n      //   return 'se';\n      // else\n      return \"satu \";\n\n    case 2:\n      return \"dua \";\n\n    case 3:\n      return \"tiga \";\n\n    case 4:\n      return \"empat \";\n\n    case 5:\n      return \"lima \";\n\n    case 6:\n      return \"enam \";\n\n    case 7:\n      return \"tujuh \";\n\n    case 8:\n      return \"delapan \";\n\n    case 9:\n      return \"sembilan \";\n\n    default:\n      return \"\";\n  }\n};\n\nvar tLevel = [\"ratus\", \"ribu\", \"puluh\"];\n\nvar decodeUnderThousand = function decodeUnderThousand(nominal) {\n  var stack = [];\n  var num = nominal;\n  var div = 1000;\n\n  for (var digit = 3; digit > 0; digit--) {\n    nominal = nominal % div;\n    div /= 10;\n    num = parseInt(nominal / div);\n    if (num > 0) stack.push({\n      num: num,\n      say: tLevel[digit % 3]\n    });\n  }\n\n  var terbilang = \"\";\n  stack.forEach(function (item, index) {\n    if (item.num > 0) {\n      if (index < stack.length - 1) terbilang += decodeNum(item.num, index) + item.say + \" \";else {\n        if (item.say == \"ribu\") terbilang += decodeNum(item.num, index) + \" \";else terbilang += decodeNum(item.num, index) + item.say + \" \";\n      }\n    }\n  });\n  return terbilang;\n};\n\nvar decodeBelasan = function decodeBelasan(terbilang) {\n  terbilang = terbilang.trim();\n  var found = terbilang.indexOf(\"satu puluh satu\");\n\n  if (found >= 0) {\n    var pre = \"\";\n\n    if (found > 0) {\n      pre = terbilang.substring(0, found);\n    }\n\n    var post = terbilang.substring(found + \"satu puluh satu\".length, terbilang.length); // satu ratus ke seratus\n\n    if (pre.length > 0) {\n      pre = pre.trim();\n      pre += \" \";\n    } // satu puluh satu ke sebelas\n\n\n    if (post.length == 0) {\n      pre += \"sebelas\";\n    }\n\n    return pre;\n  } else {\n    found = terbilang.indexOf(\"satu puluh\");\n\n    if (found >= 0) {\n      var _pre = \"\";\n\n      if (found > 0) {\n        _pre = terbilang.substring(0, found);\n      }\n\n      var _post = terbilang.substring(found + \"satu puluh\".length, terbilang.length); // satu ratus ke seratus\n\n\n      if (_pre.length > 0) {\n        _pre = _pre.trim();\n        _pre += \" \";\n      }\n\n      if (_post.length > 0) {\n        _post = _post.trim();\n        _pre += _post + \" belas\";\n      } else {\n        _pre += \"sepuluh\";\n      }\n\n      return _pre;\n    }\n  }\n\n  terbilang = replace(terbilang, \"satu ratus\", \"seratus\");\n  return terbilang;\n};\n\nvar decodeTerbilang = function decodeTerbilang(nominal) {\n  var aboveBillion = parseInt(Math.floor(nominal / 1000000000));\n  aboveBillion = decodeUnderThousand(aboveBillion);\n  aboveBillion = decodeBelasan(aboveBillion);\n  nominal = nominal % 1000000000;\n  var aboveMillion = parseInt(Math.floor(nominal / 1000000));\n  aboveMillion = decodeUnderThousand(aboveMillion);\n  aboveMillion = decodeBelasan(aboveMillion);\n  nominal = nominal % 1000000;\n  var aboveThousand = parseInt(Math.floor(nominal / 1000));\n  aboveThousand = decodeUnderThousand(aboveThousand);\n  aboveThousand = decodeBelasan(aboveThousand);\n  nominal = nominal % 1000;\n  var underThousand = nominal % 1000;\n  underThousand = decodeUnderThousand(underThousand);\n  underThousand = decodeBelasan(underThousand);\n  var result = \"\";\n  if (aboveBillion.length > 0) result += aboveBillion + \" miliar \";\n  if (aboveMillion.length > 0) result += aboveMillion + \" juta \";\n  if (aboveThousand === \"satu\") result += \"seribu \";else if (aboveThousand.length > 0) result += aboveThousand + \" ribu \";\n  if (underThousand.length > 0) result += underThousand;\n  return (result.trim() + \" rupiah\").toUpperCase();\n};\n\nvar formatCurrency = function formatCurrency(num) {\n  var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var d = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \",\";\n  var t = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \".\";\n  c = isNaN(c = Math.abs(c)) ? 2 : c;\n  d = d == undefined ? \".\" : d;\n  t = t == undefined ? \",\" : t;\n  var n = num,\n      s = n < 0 ? \"-\" : \"\",\n      i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),\n      j = (j = i.length) > 3 ? j % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\n};\n\nexports.decodeTerbilang = decodeTerbilang;\nexports.formatCurrency = formatCurrency;","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/libs/numbers.js"],"names":["replace","require","decodeNum","num","index","tLevel","decodeUnderThousand","nominal","stack","div","digit","parseInt","push","say","terbilang","forEach","item","length","decodeBelasan","trim","found","indexOf","pre","substring","post","decodeTerbilang","aboveBillion","Math","floor","aboveMillion","aboveThousand","underThousand","result","toUpperCase","formatCurrency","c","d","t","isNaN","abs","undefined","n","s","i","String","Number","toFixed","j","substr","slice","exports"],"mappings":"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","sourcesContent":["// import replace from \"lodash/replace\";\nconst replace = require(\"lodash/replace\");\n\nconst decodeNum = (num, index) => {\n  switch (num) {\n    case 1:\n      // if (index == 0)\n      //   return 'se';\n      // else\n      return \"satu \";\n    case 2:\n      return \"dua \";\n    case 3:\n      return \"tiga \";\n    case 4:\n      return \"empat \";\n    case 5:\n      return \"lima \";\n    case 6:\n      return \"enam \";\n    case 7:\n      return \"tujuh \";\n    case 8:\n      return \"delapan \";\n    case 9:\n      return \"sembilan \";\n    default:\n      return \"\";\n  }\n};\n\nconst tLevel = [\"ratus\", \"ribu\", \"puluh\"];\n\nconst decodeUnderThousand = nominal => {\n  let stack = [];\n\n  let num = nominal;\n  let div = 1000;\n  for (let digit = 3; digit > 0; digit--) {\n    nominal = nominal % div;\n    div /= 10;\n    num = parseInt(nominal / div);\n\n    if (num > 0)\n      stack.push({\n        num: num,\n        say: tLevel[digit % 3]\n      });\n  }\n\n  let terbilang = \"\";\n  stack.forEach((item, index) => {\n    if (item.num > 0) {\n      if (index < stack.length - 1)\n        terbilang += decodeNum(item.num, index) + item.say + \" \";\n      else {\n        if (item.say == \"ribu\") terbilang += decodeNum(item.num, index) + \" \";\n        else terbilang += decodeNum(item.num, index) + item.say + \" \";\n      }\n    }\n  });\n  return terbilang;\n};\n\nconst decodeBelasan = terbilang => {\n  terbilang = terbilang.trim();\n  let found = terbilang.indexOf(\"satu puluh satu\");\n\n  if (found >= 0) {\n    let pre = \"\";\n    if (found > 0) {\n      pre = terbilang.substring(0, found);\n    }\n    let post = terbilang.substring(\n      found + \"satu puluh satu\".length,\n      terbilang.length\n    );\n\n    // satu ratus ke seratus\n    if (pre.length > 0) {\n      pre = pre.trim();\n      pre += \" \";\n    }\n    // satu puluh satu ke sebelas\n    if (post.length == 0) {\n      pre += \"sebelas\";\n    }\n    return pre;\n  } else {\n    found = terbilang.indexOf(\"satu puluh\");\n\n    if (found >= 0) {\n      let pre = \"\";\n      if (found > 0) {\n        pre = terbilang.substring(0, found);\n      }\n      let post = terbilang.substring(\n        found + \"satu puluh\".length,\n        terbilang.length\n      );\n      // satu ratus ke seratus\n      if (pre.length > 0) {\n        pre = pre.trim();\n        pre += \" \";\n      }\n      if (post.length > 0) {\n        post = post.trim();\n        pre += post + \" belas\";\n      } else {\n        pre += \"sepuluh\";\n      }\n      return pre;\n    }\n  }\n\n  terbilang = replace(terbilang, \"satu ratus\", \"seratus\");\n  return terbilang;\n};\n\nconst decodeTerbilang = nominal => {\n  let aboveBillion = parseInt(Math.floor(nominal / 1000000000));\n  aboveBillion = decodeUnderThousand(aboveBillion);\n  aboveBillion = decodeBelasan(aboveBillion);\n\n  nominal = nominal % 1000000000;\n  let aboveMillion = parseInt(Math.floor(nominal / 1000000));\n  aboveMillion = decodeUnderThousand(aboveMillion);\n  aboveMillion = decodeBelasan(aboveMillion);\n\n  nominal = nominal % 1000000;\n  let aboveThousand = parseInt(Math.floor(nominal / 1000));\n  aboveThousand = decodeUnderThousand(aboveThousand);\n  aboveThousand = decodeBelasan(aboveThousand);\n\n  nominal = nominal % 1000;\n  let underThousand = nominal % 1000;\n  underThousand = decodeUnderThousand(underThousand);\n  underThousand = decodeBelasan(underThousand);\n\n  let result = \"\";\n  if (aboveBillion.length > 0) result += aboveBillion + \" miliar \";\n  if (aboveMillion.length > 0) result += aboveMillion + \" juta \";\n  if (aboveThousand === \"satu\") result += \"seribu \";\n  else if (aboveThousand.length > 0) result += aboveThousand + \" ribu \";\n  if (underThousand.length > 0) result += underThousand;\n\n  return (result.trim() + \" rupiah\").toUpperCase();\n};\n\nconst formatCurrency = (num, c = 2, d = \",\", t = \".\") => {\n  c = isNaN((c = Math.abs(c))) ? 2 : c;\n  d = d == undefined ? \".\" : d;\n  t = t == undefined ? \",\" : t;\n  var n = num,\n    s = n < 0 ? \"-\" : \"\",\n    i = String(parseInt((n = Math.abs(Number(n) || 0).toFixed(c)))),\n    j = (j = i.length) > 3 ? j % 3 : 0;\n  return (\n    s +\n    (j ? i.substr(0, j) + t : \"\") +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) +\n    (c\n      ? d +\n        Math.abs(n - i)\n          .toFixed(c)\n          .slice(2)\n      : \"\")\n  );\n};\n\nexports.decodeTerbilang = decodeTerbilang;\nexports.formatCurrency = formatCurrency;\n"]},"metadata":{},"sourceType":"script"}