{"ast":null,"code":"import ContentService from \"../../service/content\";\nexport var getContentCategory = function getContentCategory(opts) {\n  return function (dispatch) {\n    return ContentService.getContentCategory(opts).then(function (data) {\n      dispatch({\n        type: \"GET_CONTENT_CATEGORY\",\n        payload: {\n          data: data.data.data,\n          total: data.data.meta.pagination.total\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var storeContentCategory = function storeContentCategory(payload) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (dispatch) {\n    return ContentService.storeContentCategory(payload, opts).then(function (data) {\n      dispatch({\n        type: \"STORE_CONTENT_CATEGORY\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateContentCategory = function updateContentCategory(id, payload) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    return ContentService.updateContentCategory(id, payload, opts).then(function (data) {\n      dispatch({\n        type: \"UPDATE_CONTENT_CATEGORY\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var deleteContentCategory = function deleteContentCategory(id) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (dispatch) {\n    return ContentService.deleteContentCategory(id, opts).then(function (data) {\n      dispatch({\n        type: \"DELETE_CONTENT_CATEGORY\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var getContent = function getContent(opts) {\n  return function (dispatch) {\n    return ContentService.getContent(opts).then(function (data) {\n      dispatch({\n        type: \"GET_CONTENT\",\n        payload: {\n          data: data.data.data,\n          total: data.data.meta.pagination.total\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var storeContent = function storeContent(payload) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (dispatch) {\n    return ContentService.storeContent(payload, opts).then(function (data) {\n      dispatch({\n        type: \"STORE_CONTENT\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateContent = function updateContent(id, payload) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    return ContentService.updateContent(id, payload, opts).then(function (data) {\n      dispatch({\n        type: \"UPDATE_CONTENT\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var deleteContent = function deleteContent(id) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (dispatch) {\n    return ContentService.deleteContent(id, opts).then(function (data) {\n      dispatch({\n        type: \"DELETE_CONTENT\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/redux/actions/content.js"],"names":["ContentService","getContentCategory","opts","dispatch","then","data","type","payload","total","meta","pagination","Promise","resolve","error","reject","storeContentCategory","updateContentCategory","id","deleteContentCategory","getContent","storeContent","updateContent","deleteContent"],"mappings":"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","sourcesContent":["import ContentService from \"../../service/content\";\n\nexport const getContentCategory = (opts) => (dispatch) => {\n    return ContentService.getContentCategory(opts).then(\n    (data) => {\n      dispatch({\n          type: \"GET_CONTENT_CATEGORY\",\n          payload: {\n              data: data.data.data,\n              total: data.data.meta.pagination.total,\n          }\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const storeContentCategory = (payload, opts = {}) => (dispatch) => {\n    return ContentService.storeContentCategory(payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"STORE_CONTENT_CATEGORY\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateContentCategory = (id, payload, opts = {}) => (dispatch) => {\n    return ContentService.updateContentCategory(id, payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"UPDATE_CONTENT_CATEGORY\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const deleteContentCategory = (id, opts = {}) => (dispatch) => {\n    return ContentService.deleteContentCategory(id, opts).then(\n    (data) => {\n      dispatch({\n          type: \"DELETE_CONTENT_CATEGORY\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\n\n\nexport const getContent = (opts) => (dispatch) => {\n    return ContentService.getContent(opts).then(\n    (data) => {\n      dispatch({\n          type: \"GET_CONTENT\",\n          payload: {\n              data: data.data.data,\n              total: data.data.meta.pagination.total,\n          }\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const storeContent = (payload, opts = {}) => (dispatch) => {\n    return ContentService.storeContent(payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"STORE_CONTENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateContent = (id, payload, opts = {}) => (dispatch) => {\n    return ContentService.updateContent(id, payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"UPDATE_CONTENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const deleteContent = (id, opts = {}) => (dispatch) => {\n    return ContentService.deleteContent(id, opts).then(\n    (data) => {\n      dispatch({\n          type: \"DELETE_CONTENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}