{"ast":null,"code":"import WalletService from '../../service/wallet';\nexport const getWallet = opts => dispatch => {\n  return WalletService.getWallet(opts).then(data => {\n    dispatch({\n      type: \"GET_WALLET\",\n      payload: {\n        data: data.data.data,\n        total: data.data.meta.pagination.total\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const storeWallet = payload => dispatch => {\n  return WalletService.storeWallet(payload).then(data => {\n    dispatch({\n      type: \"STORE_WALLET\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const updateWallet = payload => dispatch => {\n  return WalletService.updateWallet(payload).then(data => {\n    dispatch({\n      type: \"UPDATE_WALLET\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const destroyWallet = id => dispatch => {\n  return WalletService.deleteWallet(id).then(data => {\n    dispatch({\n      type: \"DELETE_WALLET\"\n    });\n  }, error => {\n    console.log(error);\n  });\n};\nexport const getRekonsil = payload => dispatch => {\n  return WalletService.getRekonsil(payload).then(data => {\n    dispatch({\n      type: \"GET_REKONSIL\",\n      payload: {\n        data: data.data.data,\n        total: data.data.meta.pagination.total,\n        included: data.data.included\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const storeRekonsil = payload => dispatch => {\n  return WalletService.storeRekonsil(payload).then(data => {\n    dispatch({\n      type: \"STORE_REKONSIL\",\n      payload: {\n        data: data.data.data,\n        included: data.data.included\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/wallet.js"],"names":["WalletService","getWallet","opts","dispatch","then","data","type","payload","total","meta","pagination","Promise","resolve","error","reject","storeWallet","updateWallet","destroyWallet","id","deleteWallet","console","log","getRekonsil","included","storeRekonsil"],"mappings":"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","sourcesContent":["import WalletService from '../../service/wallet'\n\nexport const getWallet = (opts) => (dispatch) => {\n    return WalletService.getWallet(opts).then(\n        (data) => {\n            dispatch({\n                type: \"GET_WALLET\",\n                payload: {\n                    data: data.data.data,\n                    total: data.data.meta.pagination.total\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeWallet = (payload) => (dispatch) => {\n    return WalletService.storeWallet(payload).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_WALLET\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateWallet = (payload) => (dispatch) => {\n    return WalletService.updateWallet(payload).then(\n        (data) => {\n            dispatch({\n                type: \"UPDATE_WALLET\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const destroyWallet = (id) => (dispatch) => {\n    return WalletService.deleteWallet(id).then((data) => {\n        dispatch({\n            type: \"DELETE_WALLET\"\n        })\n    }, (error) => {\n      console.log(error)\n    })\n}\n\nexport const getRekonsil = (payload) => (dispatch) => {\n    return WalletService.getRekonsil(payload).then(\n        (data) => {\n            dispatch({\n                type: \"GET_REKONSIL\",\n                payload: {\n                    data: data.data.data,\n                    total: data.data.meta.pagination.total,\n                    included: data.data.included,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeRekonsil = (payload) => (dispatch) => {\n    return WalletService.storeRekonsil(payload).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_REKONSIL\",\n                payload: {\n                    data: data.data.data,\n                    included: data.data.included\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}"]},"metadata":{},"sourceType":"module"}