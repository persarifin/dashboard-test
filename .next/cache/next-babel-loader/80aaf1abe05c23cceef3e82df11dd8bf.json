{"ast":null,"code":"import UserService from \"../../service/user\";\nimport { hideLoadingSpinner } from \"components/Layout\";\nexport const getUser = opts => dispatch => {\n  return UserService.getUser(opts).then(data => {\n    dispatch({\n      type: \"GET_USER\",\n      payload: {\n        data: data.data.data,\n        total: data.data.total\n      }\n    });\n    console.log(data.data.data.data);\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const storeUser = (payload, opts) => dispatch => {\n  return UserService.storeUser(payload, opts).then(data => {\n    dispatch({\n      type: \"STORE_USER\",\n      payload: {\n        data: data\n      }\n    });\n    console.log();\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const updateUser = (id, payload, opts = {}) => dispatch => {\n  return UserService.updateUser(id, payload, opts).then(data => {\n    dispatch({\n      type: \"UPDATE_USER\",\n      payload: {\n        data: data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const deleteUser = id => dispatch => {\n  return UserService.deleteUser(id).then(data => {\n    dispatch({\n      type: \"DELETE_USER\"\n    });\n  }, error => {\n    hideLoadingSpinner();\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/redux/actions/user.js"],"names":["UserService","hideLoadingSpinner","getUser","opts","dispatch","then","data","type","payload","total","console","log","Promise","resolve","error","reject","storeUser","updateUser","id","deleteUser"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC7C,SAAOJ,WAAW,CAACE,OAAZ,CAAoBC,IAApB,EAA0BE,IAA1B,CACJC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,OAAO,EAAE;AACPF,QAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADT;AAEPG,QAAAA,KAAK,EAAEH,IAAI,CAACA,IAAL,CAAUG;AAFV;AAFF,KAAD,CAAR;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeA,IAA3B;AACA,WAAOM,OAAO,CAACC,OAAR,EAAP;AACD,GAXI,EAYJC,KAAD,IAAW;AACTV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGAN,IAAAA,kBAAkB;AAClB,WAAOW,OAAO,CAACG,MAAR,EAAP;AACD,GAlBI,CAAP;AAoBD,CArBM;AAwBP,OAAO,MAAMC,SAAS,GAAG,CAACR,OAAD,EAAUL,IAAV,KAAoBC,QAAD,IAAc;AACxD,SAAOJ,WAAW,CAACgB,SAAZ,CAAsBR,OAAtB,EAA+BL,IAA/B,EAAqCE,IAArC,CACJC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAC;AACNF,QAAAA,IAAI,EAACA;AADC;AAFD,KAAD,CAAR;AAMAI,IAAAA,OAAO,CAACC,GAAR;AACA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAVI,EAWJC,KAAD,IAAW;AACTV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,WAAOK,OAAO,CAACG,MAAR,EAAP;AACD,GAjBI,CAAP;AAmBD,CApBM;AAsBP,OAAO,MAAME,UAAU,GAAG,CAACC,EAAD,EAAKV,OAAL,EAAcL,IAAI,GAAG,EAArB,KAA6BC,QAAD,IAAc;AAClE,SAAOJ,WAAW,CAACiB,UAAZ,CAAuBC,EAAvB,EAA2BV,OAA3B,EAAoCL,IAApC,EAA0CE,IAA1C,CACJC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAC;AACNF,QAAAA,IAAI,EAACA;AADC;AAFH,KAAD,CAAR;AAMA,WAAOM,OAAO,CAACC,OAAR,EAAP;AACD,GATI,EAUJC,KAAD,IAAW;AACTV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,WAAOK,OAAO,CAACG,MAAR,EAAP;AACD,GAhBI,CAAP;AAkBD,CAnBM;AAqBP,OAAO,MAAMI,UAAU,GAAID,EAAD,IAASd,QAAD,IAAc;AAC9C,SAAOJ,WAAW,CAACmB,UAAZ,CAAuBD,EAAvB,EAA2Bb,IAA3B,CACJC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GALI,EAMJO,KAAD,IAAW;AACTb,IAAAA,kBAAkB;AAClBS,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,GATI,CAAP;AAWD,CAZM","sourcesContent":["import UserService from \"../../service/user\";\nimport { hideLoadingSpinner } from \"components/Layout\";\n\nexport const getUser = (opts) => (dispatch) => {\n  return UserService.getUser(opts).then(\n    (data) => {\n      dispatch({\n        type: \"GET_USER\",\n        payload: {\n          data: data.data.data,\n          total: data.data.total,\n        },\n      });\n      console.log(data.data.data.data)\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\n\nexport const storeUser = (payload, opts) => (dispatch) => {\n  return UserService.storeUser(payload, opts).then(\n    (data) => {\n      dispatch({\n        type: \"STORE_USER\",\n        payload:{\n          data:data\n        }\n      });\n      console.log()\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateUser = (id, payload, opts = {}) => (dispatch) => {\n  return UserService.updateUser(id, payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"UPDATE_USER\",\n          payload:{\n            data:data\n          }\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const deleteUser = (id) => (dispatch) => {\n  return UserService.deleteUser(id).then(\n    (data) => {\n      dispatch({\n        type: \"DELETE_USER\",\n      });\n    },\n    (error) => {\n      hideLoadingSpinner();\n      console.log(error);\n    }\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}