{"ast":null,"code":"import PaymentService from \"../../service/payment\";\nexport const getPayment = opts => dispatch => {\n  return PaymentService.getPayment(opts).then(data => {\n    dispatch({\n      type: \"GET_PAYMENT\",\n      payload: {\n        data: data.data.data.fata,\n        total: data.data.data.total\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const storePayment = (payload, opts = {}) => dispatch => {\n  return PaymentService.storePayment(payload, opts).then(data => {\n    dispatch({\n      type: \"STORE_PAYMENT\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const updatePayment = (id, payload, opts = {}) => dispatch => {\n  return PaymentService.updatePayment(id, payload, opts).then(data => {\n    dispatch({\n      type: \"UPDATE_PAYMENT\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const showPayment = (id, payload, opts = {}) => dispatch => {\n  return PaymentService.showPayment(id, payload, opts).then(data => {\n    dispatch({\n      type: \"SHOW_PAYMENT\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const deletePayment = (id, opts = {}) => dispatch => {\n  return PaymentService.deletePayment(id, opts).then(data => {\n    dispatch({\n      type: \"DELETE_PAYMENT\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/redux/actions/payment.js"],"names":["PaymentService","getPayment","opts","dispatch","then","data","type","payload","fata","total","Promise","resolve","error","reject","storePayment","updatePayment","id","showPayment","deletePayment"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,uBAA3B;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC9C,SAAOH,cAAc,CAACC,UAAf,CAA0BC,IAA1B,EAAgCE,IAAhC,CACNC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAE;AACLF,QAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeG,IADhB;AAELC,QAAAA,KAAK,EAAEJ,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeI;AAFjB;AAFJ,KAAD,CAAR;AAOA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAVM,EAWNC,KAAD,IAAW;AACTT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,WAAOI,OAAO,CAACG,MAAR,EAAP;AACD,GAjBM,CAAP;AAmBH,CApBM;AAsBP,OAAO,MAAMC,YAAY,GAAG,CAACP,OAAD,EAAUL,IAAI,GAAG,EAAjB,KAAyBC,QAAD,IAAc;AAC9D,SAAOH,cAAc,CAACc,YAAf,CAA4BP,OAA5B,EAAqCL,IAArC,EAA2CE,IAA3C,CACNC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGA,WAAOI,OAAO,CAACC,OAAR,EAAP;AACD,GANM,EAONC,KAAD,IAAW;AACTT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,WAAOI,OAAO,CAACG,MAAR,EAAP;AACD,GAbM,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAME,aAAa,GAAG,CAACC,EAAD,EAAKT,OAAL,EAAcL,IAAI,GAAG,EAArB,KAA6BC,QAAD,IAAc;AACnE,SAAOH,cAAc,CAACe,aAAf,CAA6BC,EAA7B,EAAiCT,OAAjC,EAA0CL,IAA1C,EAAgDE,IAAhD,CACNC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGA,WAAOI,OAAO,CAACC,OAAR,EAAP;AACD,GANM,EAONC,KAAD,IAAW;AACTT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,WAAOI,OAAO,CAACG,MAAR,EAAP;AACD,GAbM,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAMI,WAAW,GAAG,CAACD,EAAD,EAAKT,OAAL,EAAcL,IAAI,GAAG,EAArB,KAA6BC,QAAD,IAAc;AACnE,SAAOH,cAAc,CAACiB,WAAf,CAA2BD,EAA3B,EAA+BT,OAA/B,EAAwCL,IAAxC,EAA8CE,IAA9C,CACNC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGA,WAAOI,OAAO,CAACC,OAAR,EAAP;AACD,GANM,EAONC,KAAD,IAAW;AACTT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,WAAOI,OAAO,CAACG,MAAR,EAAP;AACD,GAbM,CAAP;AAeD,CAhBM;AAkBP,OAAO,MAAMK,aAAa,GAAG,CAACF,EAAD,EAAKd,IAAI,GAAG,EAAZ,KAAoBC,QAAD,IAAc;AAC1D,SAAOH,cAAc,CAACkB,aAAf,CAA6BF,EAA7B,EAAiCd,IAAjC,EAAuCE,IAAvC,CACNC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGA,WAAOI,OAAO,CAACC,OAAR,EAAP;AACD,GANM,EAONC,KAAD,IAAW;AACTT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,WAAOI,OAAO,CAACG,MAAR,EAAP;AACD,GAbM,CAAP;AAeH,CAhBM","sourcesContent":["import PaymentService from \"../../service/payment\";\n\nexport const getPayment = (opts) => (dispatch) => {\n    return PaymentService.getPayment(opts).then(\n    (data) => {\n      dispatch({\n          type: \"GET_PAYMENT\",\n          payload: {\n              data: data.data.data.fata,\n              total: data.data.data.total,\n          }\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const storePayment = (payload, opts = {}) => (dispatch) => {\n    return PaymentService.storePayment(payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"STORE_PAYMENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updatePayment = (id, payload, opts = {}) => (dispatch) => {\n    return PaymentService.updatePayment(id, payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"UPDATE_PAYMENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const showPayment = (id, payload, opts = {}) => (dispatch) => {\n  return PaymentService.showPayment(id, payload, opts).then(\n  (data) => {\n    dispatch({\n        type: \"SHOW_PAYMENT\",\n    })\n    return Promise.resolve();\n  },\n  (error) => {\n    dispatch({\n      type: \"FAIL\",\n    });\n\n    return Promise.reject();\n  }\n);\n};\n\nexport const deletePayment = (id, opts = {}) => (dispatch) => {\n    return PaymentService.deletePayment(id, opts).then(\n    (data) => {\n      dispatch({\n          type: \"DELETE_PAYMENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}