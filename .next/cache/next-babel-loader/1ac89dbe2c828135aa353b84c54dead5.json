{"ast":null,"code":"import CompanyService from \"../../service/company\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\nexport var getCompanies = function getCompanies(opts) {\n  return function (dispatch) {\n    return CompanyService.getCompanies(opts).then(function (data) {\n      dispatch({\n        type: \"GET_ALL_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n          total: data.data.meta.pagination.total\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};\nexport var getCompany = function getCompany(payload) {\n  return function (dispatch) {\n    return CompanyService.getCompany(payload).then(function (data) {\n      dispatch({\n        type: \"GET_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};\nexport var storeCompany = function storeCompany(payload) {\n  return function (dispatch) {\n    return CompanyService.storeCompany(payload).then(function (data) {\n      dispatch({\n        type: \"STORE_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};\nexport var updateCompany = function updateCompany(payload) {\n  return function (dispatch) {\n    return CompanyService.updateCompany(payload).then(function (data) {\n      dispatch({\n        type: \"COMPANY_UPDATE\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n}; // export const getUserCompany = (opts) => (dispatch) => {\n//   return CompanyService.getUserCompany(opts).then(\n//     (data) => {\n//       dispatch({\n//         type: \"GET_ALL_COMPANY\",\n//         payload: {\n//           data: data.data.data,\n//           included: data.data.included,\n//           total: data.data.meta.pagination.total,\n//         },\n//       });\n//       return Promise.resolve();\n//     },\n//     (error) => {\n//       hideLoadingSpinner();\n//       return Promise.reject();\n//     }\n//   );\n// };\n\nexport var toggleStatusCompany = function toggleStatusCompany(id, payload) {\n  return function (dispatch) {\n    return CompanyService.toggleStatusCompany(id, payload).then(function (data) {\n      return Promise.resolve();\n    }, function (error) {\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/company.js"],"names":["CompanyService","hideLoadingSpinner","getCompanies","opts","dispatch","then","data","type","payload","included","total","meta","pagination","Promise","resolve","error","reject","getCompany","storeCompany","updateCompany","toggleStatusCompany","id"],"mappings":"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","sourcesContent":["import CompanyService from \"../../service/company\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\n\nexport const getCompanies = (opts) => (dispatch) => {\n  return CompanyService.getCompanies(opts).then(\n    (data) => {\n      dispatch({\n        type: \"GET_ALL_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n          total: data.data.meta.pagination.total,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const getCompany = (payload) => (dispatch) => {\n  return CompanyService.getCompany(payload).then(\n    (data) => {\n      dispatch({\n        type: \"GET_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const storeCompany = (payload) => (dispatch) => {\n  return CompanyService.storeCompany(payload).then(\n    (data) => {\n      dispatch({\n        type: \"STORE_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n        },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateCompany = (payload) => (dispatch) => {\n  return CompanyService.updateCompany(payload).then(\n    (data) => {\n      dispatch({\n        type: \"COMPANY_UPDATE\",\n        payload: {\n          data: data.data.data,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\n// export const getUserCompany = (opts) => (dispatch) => {\n//   return CompanyService.getUserCompany(opts).then(\n//     (data) => {\n//       dispatch({\n//         type: \"GET_ALL_COMPANY\",\n//         payload: {\n//           data: data.data.data,\n//           included: data.data.included,\n//           total: data.data.meta.pagination.total,\n//         },\n//       });\n//       return Promise.resolve();\n//     },\n//     (error) => {\n//       hideLoadingSpinner();\n\n//       return Promise.reject();\n//     }\n//   );\n// };\n\nexport const toggleStatusCompany = (id, payload) => (dispatch) => {\n  return CompanyService.toggleStatusCompany(id, payload).then(\n    (data) => {\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}