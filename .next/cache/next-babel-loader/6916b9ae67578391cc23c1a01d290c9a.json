{"ast":null,"code":"import CompanyService from \"../../service/company\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\nexport const getCompanies = opts => dispatch => {\n  return CompanyService.getCompanies(opts).then(data => {\n    dispatch({\n      type: \"GET_ALL_COMPANY\",\n      payload: {\n        data: data.data.data,\n        included: data.data.included,\n        total: data.data.meta.pagination.total\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const getCompany = payload => dispatch => {\n  return CompanyService.getCompany(payload).then(data => {\n    dispatch({\n      type: \"GET_COMPANY\",\n      payload: {\n        data: data.data.data,\n        included: data.data.included\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const storeCompany = payload => dispatch => {\n  return CompanyService.storeCompany(payload).then(data => {\n    dispatch({\n      type: \"STORE_COMPANY\",\n      payload: {\n        data: data.data.data,\n        included: data.data.included\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const updateCompany = payload => dispatch => {\n  return CompanyService.updateCompany(payload).then(data => {\n    dispatch({\n      type: \"COMPANY_UPDATE\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const getUserCompany = opts => dispatch => {\n  return CompanyService.getUserCompany(opts).then(data => {\n    dispatch({\n      type: \"GET_ALL_COMPANY\",\n      payload: {\n        data: data.data.data,\n        included: data.data.included,\n        total: data.data.meta.pagination.total\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const toggleStatusCompany = (id, payload) => dispatch => {\n  return CompanyService.toggleStatusCompany(id, payload).then(data => {\n    return Promise.resolve();\n  }, error => {\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/company.js"],"names":["CompanyService","hideLoadingSpinner","getCompanies","opts","dispatch","then","data","type","payload","included","total","meta","pagination","Promise","resolve","error","reject","getCompany","storeCompany","updateCompany","getUserCompany","toggleStatusCompany","id"],"mappings":"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","sourcesContent":["import CompanyService from \"../../service/company\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\n\nexport const getCompanies = (opts) => (dispatch) => {\n  return CompanyService.getCompanies(opts).then(\n    (data) => {\n      dispatch({\n        type: \"GET_ALL_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n          total: data.data.meta.pagination.total,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const getCompany = (payload) => (dispatch) => {\n  return CompanyService.getCompany(payload).then(\n    (data) => {\n      dispatch({\n        type: \"GET_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const storeCompany = (payload) => (dispatch) => {\n  return CompanyService.storeCompany(payload).then(\n    (data) => {\n      dispatch({\n        type: \"STORE_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n        },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateCompany = (payload) => (dispatch) => {\n  return CompanyService.updateCompany(payload).then(\n    (data) => {\n      dispatch({\n        type: \"COMPANY_UPDATE\",\n        payload: {\n          data: data.data.data,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const getUserCompany = (opts) => (dispatch) => {\n  return CompanyService.getUserCompany(opts).then(\n    (data) => {\n      dispatch({\n        type: \"GET_ALL_COMPANY\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n          total: data.data.meta.pagination.total,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const toggleStatusCompany = (id, payload) => (dispatch) => {\n  return CompanyService.toggleStatusCompany(id, payload).then(\n    (data) => {\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}