{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseService from \"./baseService.js\";\nimport cloneDeep from 'lodash/cloneDeep';\n\nvar CompanyService = /*#__PURE__*/function (_BaseService) {\n  _inherits(CompanyService, _BaseService);\n\n  var _super = _createSuper(CompanyService);\n\n  function CompanyService() {\n    _classCallCheck(this, CompanyService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CompanyService, [{\n    key: \"getCompanies\",\n    value: function getCompanies() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.endPoint = \"/companies\";\n      return this.get(opts);\n    }\n  }, {\n    key: \"getCompany\",\n    value: function getCompany(payload) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = \"/companies/\".concat(payload.company_id);\n      return this.get(opts);\n    }\n  }, {\n    key: \"storeCompany\",\n    value: function storeCompany(payload) {\n      this.endPoint = \"/companies\";\n      return this.post(payload);\n    }\n  }, {\n    key: \"updateCompany\",\n    value: function updateCompany(payload) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/companies/' + payload.get('id');\n      var newOpts = cloneDeep(opts, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return this.post(payload, newOpts);\n    }\n  }, {\n    key: \"getUserCompany\",\n    value: function getUserCompany() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.endPoint = \"/get-user-company\";\n      return this.get(opts);\n    }\n  }, {\n    key: \"toggleStatusCompany\",\n    value: function toggleStatusCompany(id, payload) {\n      this.endPoint = \"/toggle-status-company\";\n      return this.putOne(id, payload);\n    }\n  }]);\n\n  return CompanyService;\n}(BaseService);\n\nexport default new CompanyService();","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/service/company.js"],"names":["BaseService","cloneDeep","CompanyService","opts","endPoint","get","payload","company_id","post","newOpts","headers","id","putOne"],"mappings":";;;;;;;;;;AAAA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;IACMC,c;;;;;;;;;;;;;mCACoB;AAAA,UAAXC,IAAW,uEAAJ,EAAI;AACtB,WAAKC,QAAL;AACA,aAAO,KAAKC,GAAL,CAASF,IAAT,CAAP;AACD;;;+BAEUG,O,EAAoB;AAAA,UAAXH,IAAW,uEAAJ,EAAI;AAC7B,WAAKC,QAAL,wBAA8BE,OAAO,CAACC,UAAtC;AACA,aAAO,KAAKF,GAAL,CAASF,IAAT,CAAP;AACD;;;iCAEYG,O,EAAS;AACpB,WAAKF,QAAL,GAAgB,YAAhB;AACA,aAAO,KAAKI,IAAL,CAAUF,OAAV,CAAP;AACD;;;kCAEaA,O,EAAoB;AAAA,UAAXH,IAAW,uEAAJ,EAAI;AAChC,WAAKC,QAAL,GAAgB,gBAAgBE,OAAO,CAACD,GAAR,CAAY,IAAZ,CAAhC;AACA,UAAMI,OAAO,GAAGR,SAAS,CAACE,IAAD,EAAO;AAC5BO,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADmB,OAAP,CAAzB;AAKA,aAAO,KAAKF,IAAL,CAAUF,OAAV,EAAmBG,OAAnB,CAAP;AACD;;;qCAEyB;AAAA,UAAXN,IAAW,uEAAJ,EAAI;AACxB,WAAKC,QAAL,GAAgB,mBAAhB;AACA,aAAO,KAAKC,GAAL,CAASF,IAAT,CAAP;AACD;;;wCAEmBQ,E,EAAIL,O,EAAS;AAC/B,WAAKF,QAAL,GAAgB,wBAAhB;AACA,aAAO,KAAKQ,MAAL,CAAYD,EAAZ,EAAgBL,OAAhB,CAAP;AACD;;;;EAlC0BN,W;;AAqC7B,eAAe,IAAIE,cAAJ,EAAf","sourcesContent":["import BaseService from \"./baseService.js\";\nimport cloneDeep from 'lodash/cloneDeep'\nclass CompanyService extends BaseService {\n  getCompanies(opts = {}) {\n    this.endPoint = `/companies`;\n    return this.get(opts);\n  }\n\n  getCompany(payload, opts = {}) {\n    this.endPoint = `/companies/${payload.company_id}`;\n    return this.get(opts);\n  }\n\n  storeCompany(payload) {\n    this.endPoint = \"/companies\";\n    return this.post(payload);\n  }\n\n  updateCompany(payload, opts = {}) {\n    this.endPoint = '/companies/' + payload.get('id')\n    const newOpts = cloneDeep(opts, {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    })\n    return this.post(payload, newOpts)\n  }\n\n  getUserCompany(opts = {}) {\n    this.endPoint = \"/get-user-company\";\n    return this.get(opts);\n  }\n\n  toggleStatusCompany(id, payload) {\n    this.endPoint = \"/toggle-status-company\";\n    return this.putOne(id, payload);\n  }\n}\n\nexport default new CompanyService();\n"]},"metadata":{},"sourceType":"module"}