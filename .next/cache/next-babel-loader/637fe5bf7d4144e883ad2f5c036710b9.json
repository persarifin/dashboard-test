{"ast":null,"code":"import SubmissionService from '../../service/submissoin';\nexport var getSubmission = function getSubmission(opts) {\n  return function (dispatch) {\n    return SubmissionService.getSubmission(opts).then(function (data) {\n      dispatch({\n        type: \"GET_SUBMISSION\",\n        payload: {\n          data: data.data.data,\n          include: data.data.included,\n          total: data.data.meta.pagination.total,\n          total_amount: data.data.total_profit,\n          total_potensial: data.data.total_potensial\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var getSubmissionById = function getSubmissionById(id, opts) {\n  return function (dispatch) {\n    return SubmissionService.getSubmissionById(id, opts).then(function (data) {\n      dispatch({\n        type: \"GET_SUBMISSION_ID\",\n        payload: {\n          data: data.data.data,\n          include: data.data.included\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateSubmission = function updateSubmission(id, payload) {\n  return function (dispatch) {\n    return SubmissionService.updateSubmission(id, payload).then(function (data) {\n      dispatch({\n        type: \"SUBMISSION_UPDATE\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateStatusSubmission = function updateStatusSubmission(id, payload, opts) {\n  return function (dispatch) {\n    return SubmissionService.updateStatusSubmission(id, payload, opts).then(function (data) {\n      dispatch({\n        type: \"SUBMISSION_UPDATE_STATUS\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateFulfilledSubmission = function updateFulfilledSubmission(id, payload, opts) {\n  return function (dispatch) {\n    return SubmissionService.updateFulfilled(id, payload, opts).then(function (data) {\n      dispatch({\n        type: \"SUBMISSION_UPDATE_FULFILLED\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var getSubmissionDraft = function getSubmissionDraft(payload) {\n  return function (dispatch) {\n    return SubmissionService.getSubmission(payload).then(function (data) {\n      dispatch({\n        type: \"GET_SUBMISSION_DRAFT\",\n        payload: {\n          data: data.data.data,\n          include: data.data.include,\n          total: data.data.meta.pagination.total\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var storeSubmission = function storeSubmission(payload) {\n  return function (dispatch) {\n    return SubmissionService.storeSubmission(payload).then(function (data) {\n      dispatch({\n        type: \"STORE_SUBMISSION\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var getSubmissionCategory = function getSubmissionCategory(payload) {\n  return function (dispatch) {\n    return SubmissionService.getSubmissionCategory(payload).then(function (data) {\n      dispatch({\n        type: \"GET_CATEGORY_SUBMISSION\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var storeSubmissionCategory = function storeSubmissionCategory(payload) {\n  return function (dispatch) {\n    return SubmissionService.storeSubmissionCategory(payload).then(function (data) {\n      dispatch({\n        type: \"STORE_CATEGORY_SUBMISSION\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateSubmissionCategory = function updateSubmissionCategory(payload) {\n  return function (dispatch) {\n    return SubmissionService.updateSubmissionCategory(payload).then(function (data) {\n      dispatch({\n        type: \"UPDATE_CATEGORY_SUBMISSION\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var destroy = function destroy(id) {\n  return function (dispatch) {\n    return SubmissionService.deleteSubmissionCategory(id).then(function (data) {\n      dispatch({\n        type: \"DELETE_CATEGORY_SUBMISSION\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var destroySubmission = function destroySubmission(id) {\n  return function (dispatch) {\n    return SubmissionService.deleteSubmission(id).then(function (data) {\n      dispatch({\n        type: \"DELETE_SUBMISSION\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var getSubmissionComment = function getSubmissionComment(opts) {\n  return function (dispatch) {\n    return SubmissionService.getSubmissionComment(opts).then(function (data) {\n      dispatch({\n        type: \"GET_SUBMISSION_COMMENT\",\n        payload: {\n          data: data.data.data,\n          include: data.data.included // total: data.data.meta.pagination.total\n\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var storeSubmissionComment = function storeSubmissionComment(payload, opts) {\n  return function (dispatch) {\n    return SubmissionService.storeSubmissionComment(payload, opts).then(function (data) {\n      dispatch({\n        type: \"STORE_SUBMISSION_COMMENT\",\n        payload: {\n          data: data.data.data,\n          include: data.data.included\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var destroySubmissionComment = function destroySubmissionComment(id) {\n  return function (dispatch) {\n    return SubmissionService.deleteSubmissionComment(id).then(function (data) {\n      dispatch({\n        type: \"DELETE_SUBMISSION_COMMENT\"\n      });\n    }, function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var destroySubmissionAttachment = function destroySubmissionAttachment(id) {\n  return function (dispatch) {\n    return SubmissionService.deleteSubmissionAttachment(id).then(function (data) {\n      dispatch({\n        type: \"DELETE_SUBMISSION_ATTACHMENT\"\n      });\n    }, function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getSubmissionAttachment = function getSubmissionAttachment(opts) {\n  return function (dispatch) {\n    return SubmissionService.getSubmissionAttachment(opts).then(function (data) {\n      dispatch({\n        type: \"GET_SUBMISSION_ATTACHMENT\",\n        payload: {\n          data: data.data.data,\n          include: data.data.included // total: data.data.meta.pagination.total\n\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var storeSubmissionAttachment = function storeSubmissionAttachment(payload, opts) {\n  return function (dispatch) {\n    return SubmissionService.storeSubmissionAttachment(payload, opts).then(function (data) {\n      dispatch({\n        type: \"STORE_SUBMISSION_ATTACHMENT\",\n        payload: {\n          data: data.data.data,\n          include: data.data.included\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/submission.js"],"names":["SubmissionService","getSubmission","opts","dispatch","then","data","type","payload","include","included","total","meta","pagination","total_amount","total_profit","total_potensial","Promise","resolve","error","reject","getSubmissionById","id","updateSubmission","updateStatusSubmission","updateFulfilledSubmission","updateFulfilled","getSubmissionDraft","storeSubmission","getSubmissionCategory","storeSubmissionCategory","updateSubmissionCategory","destroy","deleteSubmissionCategory","destroySubmission","deleteSubmission","getSubmissionComment","storeSubmissionComment","destroySubmissionComment","deleteSubmissionComment","console","log","destroySubmissionAttachment","deleteSubmissionAttachment","getSubmissionAttachment","storeSubmissionAttachment"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,0BAA9B;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAc;AACjD,WAAOH,iBAAiB,CAACC,aAAlB,CAAgCC,IAAhC,EAAsCE,IAAtC,CACH,UAACC,IAAD,EAAU;AAENF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,gBADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADX;AAELG,UAAAA,OAAO,EAAEH,IAAI,CAACA,IAAL,CAAUI,QAFd;AAGLC,UAAAA,KAAK,EAAEL,IAAI,CAACA,IAAL,CAAUM,IAAV,CAAeC,UAAf,CAA0BF,KAH5B;AAILG,UAAAA,YAAY,EAAER,IAAI,CAACA,IAAL,CAAUS,YAJnB;AAKLC,UAAAA,eAAe,EAAEV,IAAI,CAACA,IAAL,CAAUU;AALtB;AAFJ,OAAD,CAAR;AAUA,aAAOC,OAAO,CAACC,OAAR,EAAP;AACH,KAdE,EAeH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KArBE,CAAP;AAuBH,GAxB4B;AAAA,CAAtB;AA0BP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,EAAD,EAAKnB,IAAL;AAAA,SAAc,UAACC,QAAD,EAAc;AACzD,WAAOH,iBAAiB,CAACoB,iBAAlB,CAAoCC,EAApC,EAAwCnB,IAAxC,EAA8CE,IAA9C,CACH,UAACC,IAAD,EAAU;AAENF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADX;AAELG,UAAAA,OAAO,EAAEH,IAAI,CAACA,IAAL,CAAUI;AAFd;AAFJ,OAAD,CAAR;AAOA,aAAOO,OAAO,CAACC,OAAR,EAAP;AACH,KAXE,EAYH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAlBE,CAAP;AAoBH,GArBgC;AAAA,CAA1B;AAuBP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,EAAD,EAAKd,OAAL;AAAA,SAAiB,UAACJ,QAAD,EAAc;AAC3D,WAAOH,iBAAiB,CAACsB,gBAAlB,CAAmCD,EAAnC,EAAuCd,OAAvC,EAAgDH,IAAhD,CACH,UAACC,IAAD,EAAU;AAENF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA;AADX;AAFJ,OAAD,CAAR;AAMA,aAAOW,OAAO,CAACC,OAAR,EAAP;AACH,KAVE,EAWH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAjBE,CAAP;AAmBH,GApB+B;AAAA,CAAzB;AAsBP,OAAO,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACF,EAAD,EAAKd,OAAL,EAAcL,IAAd;AAAA,SAAuB,UAACC,QAAD,EAAc;AACvE,WAAOH,iBAAiB,CAACuB,sBAAlB,CAAyCF,EAAzC,EAA6Cd,OAA7C,EAAsDL,IAAtD,EAA4DE,IAA5D,CACH,UAACC,IAAD,EAAU;AAENF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,0BADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA;AADX;AAFJ,OAAD,CAAR;AAMA,aAAOW,OAAO,CAACC,OAAR,EAAP;AACH,KAVE,EAWH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAjBE,CAAP;AAmBH,GApBqC;AAAA,CAA/B;AAsBP,OAAO,IAAMK,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACH,EAAD,EAAKd,OAAL,EAAcL,IAAd;AAAA,SAAuB,UAACC,QAAD,EAAc;AAC1E,WAAOH,iBAAiB,CAACyB,eAAlB,CAAkCJ,EAAlC,EAAsCd,OAAtC,EAA+CL,IAA/C,EAAqDE,IAArD,CACH,UAACC,IAAD,EAAU;AAENF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,6BADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA;AADX;AAFJ,OAAD,CAAR;AAMA,aAAOW,OAAO,CAACC,OAAR,EAAP;AACH,KAVE,EAWH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAjBE,CAAP;AAmBH,GApBwC;AAAA,CAAlC;AAsBP,OAAO,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACnB,OAAD;AAAA,SAAa,UAACJ,QAAD,EAAc;AACzD,WAAOH,iBAAiB,CAACC,aAAlB,CAAgCM,OAAhC,EAAyCH,IAAzC,CACH,UAACC,IAAD,EAAU;AAENF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,sBADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADX;AAELG,UAAAA,OAAO,EAAEH,IAAI,CAACA,IAAL,CAAUG,OAFd;AAGLE,UAAAA,KAAK,EAAEL,IAAI,CAACA,IAAL,CAAUM,IAAV,CAAeC,UAAf,CAA0BF;AAH5B;AAFJ,OAAD,CAAR;AAQA,aAAOM,OAAO,CAACC,OAAR,EAAP;AACH,KAZE,EAaH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAnBE,CAAP;AAqBH,GAtBiC;AAAA,CAA3B;AAwBP,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACpB,OAAD;AAAA,SAAa,UAACJ,QAAD,EAAc;AACtD,WAAOH,iBAAiB,CAAC2B,eAAlB,CAAkCpB,OAAlC,EAA2CH,IAA3C,CACH,UAACC,IAAD,EAAU;AACNF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA;AADX;AAFJ,OAAD,CAAR;AAMA,aAAOW,OAAO,CAACC,OAAR,EAAP;AACH,KATE,EAUH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAhBE,CAAP;AAkBH,GAnB8B;AAAA,CAAxB;AAuBP,OAAO,IAAMS,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACrB,OAAD;AAAA,SAAa,UAACJ,QAAD,EAAc;AAC5D,WAAOH,iBAAiB,CAAC4B,qBAAlB,CAAwCrB,OAAxC,EAAiDH,IAAjD,CACH,UAACC,IAAD,EAAU;AACNF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,yBADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA;AADX;AAFJ,OAAD,CAAR;AAMA,aAAOW,OAAO,CAACC,OAAR,EAAP;AACH,KATE,EAUH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAhBE,CAAP;AAkBH,GAnBoC;AAAA,CAA9B;AAqBP,OAAO,IAAMU,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACtB,OAAD;AAAA,SAAa,UAACJ,QAAD,EAAc;AAC9D,WAAOH,iBAAiB,CAAC6B,uBAAlB,CAA0CtB,OAA1C,EAAmDH,IAAnD,CACH,UAACC,IAAD,EAAU;AACNF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,2BADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA;AADX;AAFJ,OAAD,CAAR;AAMA,aAAOW,OAAO,CAACC,OAAR,EAAP;AACH,KATE,EAUH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAhBE,CAAP;AAkBH,GAnBsC;AAAA,CAAhC;AAqBP,OAAO,IAAMW,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACvB,OAAD;AAAA,SAAa,UAACJ,QAAD,EAAc;AAC/D,WAAOH,iBAAiB,CAAC8B,wBAAlB,CAA2CvB,OAA3C,EAAoDH,IAApD,CACH,UAACC,IAAD,EAAU;AACNF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,4BADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA;AADX;AAFJ,OAAD,CAAR;AAMA,aAAOW,OAAO,CAACC,OAAR,EAAP;AACH,KATE,EAUH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAhBE,CAAP;AAkBH,GAnBuC;AAAA,CAAjC;AAqBP,OAAO,IAAMY,OAAO,GAAG,SAAVA,OAAU,CAACV,EAAD;AAAA,SAAQ,UAAClB,QAAD,EAAc;AACzC,WAAOH,iBAAiB,CAACgC,wBAAlB,CAA2CX,EAA3C,EAA+CjB,IAA/C,CAAoD,UAACC,IAAD,EAAU;AACjEF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGA,aAAOU,OAAO,CAACC,OAAR,EAAP;AACH,KALM,EAKJ,UAACC,KAAD,EAAW;AACVf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAXM,CAAP;AAYH,GAbsB;AAAA,CAAhB;AAeP,OAAO,IAAMc,iBAAiB,GAAG,SAApBA,iBAAoB,CAACZ,EAAD;AAAA,SAAQ,UAAClB,QAAD,EAAc;AACnD,WAAOH,iBAAiB,CAACkC,gBAAlB,CAAmCb,EAAnC,EAAuCjB,IAAvC,CAA4C,UAACC,IAAD,EAAU;AACzDF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGA,aAAOU,OAAO,CAACC,OAAR,EAAP;AACH,KALM,EAKJ,UAACC,KAAD,EAAW;AACVf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAXM,CAAP;AAYH,GAbgC;AAAA,CAA1B;AAeP,OAAO,IAAMgB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACjC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAc;AACxD,WAAOH,iBAAiB,CAACmC,oBAAlB,CAAuCjC,IAAvC,EAA6CE,IAA7C,CACH,UAACC,IAAD,EAAU;AAENF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,wBADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADX;AAELG,UAAAA,OAAO,EAAEH,IAAI,CAACA,IAAL,CAAUI,QAFd,CAGL;;AAHK;AAFJ,OAAD,CAAR;AAQA,aAAOO,OAAO,CAACC,OAAR,EAAP;AACH,KAZE,EAaH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAnBE,CAAP;AAqBH,GAtBmC;AAAA,CAA7B;AAwBP,OAAO,IAAMiB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAC7B,OAAD,EAAUL,IAAV;AAAA,SAAmB,UAACC,QAAD,EAAc;AACnE,WAAOH,iBAAiB,CAACoC,sBAAlB,CAAyC7B,OAAzC,EAAkDL,IAAlD,EAAwDE,IAAxD,CACH,UAACC,IAAD,EAAU;AACNF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,0BADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADX;AAELG,UAAAA,OAAO,EAAEH,IAAI,CAACA,IAAL,CAAUI;AAFd;AAFJ,OAAD,CAAR;AAOA,aAAOO,OAAO,CAACC,OAAR,EAAP;AACH,KAVE,EAWH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAjBE,CAAP;AAmBH,GApBqC;AAAA,CAA/B;AAsBP,OAAO,IAAMkB,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAChB,EAAD;AAAA,SAAQ,UAAClB,QAAD,EAAc;AAC1D,WAAOH,iBAAiB,CAACsC,uBAAlB,CAA0CjB,EAA1C,EAA8CjB,IAA9C,CAAmD,UAACC,IAAD,EAAU;AAChEF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH,KAJM,EAIJ,UAACY,KAAD,EAAW;AACZqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACD,KANM,CAAP;AAOH,GARuC;AAAA,CAAjC;AAUP,OAAO,IAAMuB,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACpB,EAAD;AAAA,SAAQ,UAAClB,QAAD,EAAc;AAC7D,WAAOH,iBAAiB,CAAC0C,0BAAlB,CAA6CrB,EAA7C,EAAiDjB,IAAjD,CAAsD,UAACC,IAAD,EAAU;AACnEF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH,KAJM,EAIJ,UAACY,KAAD,EAAW;AACZqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACD,KANM,CAAP;AAOH,GAR0C;AAAA,CAApC;AAYP,OAAO,IAAMyB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACzC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAc;AAC3D,WAAOH,iBAAiB,CAAC2C,uBAAlB,CAA0CzC,IAA1C,EAAgDE,IAAhD,CACH,UAACC,IAAD,EAAU;AAENF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,2BADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADX;AAELG,UAAAA,OAAO,EAAEH,IAAI,CAACA,IAAL,CAAUI,QAFd,CAGL;;AAHK;AAFJ,OAAD,CAAR;AAQA,aAAOO,OAAO,CAACC,OAAR,EAAP;AACH,KAZE,EAaH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAnBE,CAAP;AAqBH,GAtBsC;AAAA,CAAhC;AAwBP,OAAO,IAAMyB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACrC,OAAD,EAAUL,IAAV;AAAA,SAAmB,UAACC,QAAD,EAAc;AACtE,WAAOH,iBAAiB,CAAC4C,yBAAlB,CAA4CrC,OAA5C,EAAqDL,IAArD,EAA2DE,IAA3D,CACH,UAACC,IAAD,EAAU;AACNF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,6BADD;AAELC,QAAAA,OAAO,EAAE;AACLF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADX;AAELG,UAAAA,OAAO,EAAEH,IAAI,CAACA,IAAL,CAAUI;AAFd;AAFJ,OAAD,CAAR;AAOA,aAAOO,OAAO,CAACC,OAAR,EAAP;AACH,KAVE,EAWH,UAACC,KAAD,EAAW;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAIA,aAAOU,OAAO,CAACG,MAAR,EAAP;AACH,KAjBE,CAAP;AAmBH,GApBwC;AAAA,CAAlC","sourcesContent":["import SubmissionService from '../../service/submissoin'\n\nexport const getSubmission = (opts) => (dispatch) => {\n    return SubmissionService.getSubmission(opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included,\n                    total: data.data.meta.pagination.total,\n                    total_amount: data.data.total_profit,\n                    total_potensial: data.data.total_potensial\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const getSubmissionById = (id, opts) => (dispatch) => {\n    return SubmissionService.getSubmissionById(id, opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION_ID\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateSubmission = (id, payload) => (dispatch) => {\n    return SubmissionService.updateSubmission(id, payload).then(\n        (data) => {\n            \n            dispatch({\n                type: \"SUBMISSION_UPDATE\",\n                payload: {\n                    data: data.data.data,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateStatusSubmission = (id, payload, opts) => (dispatch) => {\n    return SubmissionService.updateStatusSubmission(id, payload, opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"SUBMISSION_UPDATE_STATUS\",\n                payload: {\n                    data: data.data.data,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateFulfilledSubmission = (id, payload, opts) => (dispatch) => {\n    return SubmissionService.updateFulfilled(id, payload, opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"SUBMISSION_UPDATE_FULFILLED\",\n                payload: {\n                    data: data.data.data,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const getSubmissionDraft = (payload) => (dispatch) => {\n    return SubmissionService.getSubmission(payload).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION_DRAFT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.include,\n                    total: data.data.meta.pagination.total\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeSubmission = (payload) => (dispatch) => {\n    return SubmissionService.storeSubmission(payload).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_SUBMISSION\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\n\n\nexport const getSubmissionCategory = (payload) => (dispatch) => {\n    return SubmissionService.getSubmissionCategory(payload).then(\n        (data) => {\n            dispatch({\n                type: \"GET_CATEGORY_SUBMISSION\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeSubmissionCategory = (payload) => (dispatch) => {\n    return SubmissionService.storeSubmissionCategory(payload).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_CATEGORY_SUBMISSION\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateSubmissionCategory = (payload) => (dispatch) => {\n    return SubmissionService.updateSubmissionCategory(payload).then(\n        (data) => {\n            dispatch({\n                type: \"UPDATE_CATEGORY_SUBMISSION\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const destroy = (id) => (dispatch) => {\n    return SubmissionService.deleteSubmissionCategory(id).then((data) => {\n        dispatch({\n            type: \"DELETE_CATEGORY_SUBMISSION\"\n        })\n        return Promise.resolve();\n    }, (error) => {\n        dispatch({\n            type: \"FAIL\",\n        });\n    \n        return Promise.reject();\n    })\n}\n\nexport const destroySubmission = (id) => (dispatch) => {\n    return SubmissionService.deleteSubmission(id).then((data) => {\n        dispatch({\n            type: \"DELETE_SUBMISSION\"\n        })\n        return Promise.resolve();\n    }, (error) => {\n        dispatch({\n            type: \"FAIL\",\n        });\n    \n        return Promise.reject();\n    })\n}\n\nexport const getSubmissionComment = (opts) => (dispatch) => {\n    return SubmissionService.getSubmissionComment(opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION_COMMENT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included,\n                    // total: data.data.meta.pagination.total\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeSubmissionComment = (payload, opts) => (dispatch) => {\n    return SubmissionService.storeSubmissionComment(payload, opts).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_SUBMISSION_COMMENT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const destroySubmissionComment = (id) => (dispatch) => {\n    return SubmissionService.deleteSubmissionComment(id).then((data) => {\n        dispatch({\n            type: \"DELETE_SUBMISSION_COMMENT\"\n        })\n    }, (error) => {\n      console.log(error)\n    })\n}\n\nexport const destroySubmissionAttachment = (id) => (dispatch) => {\n    return SubmissionService.deleteSubmissionAttachment(id).then((data) => {\n        dispatch({\n            type: \"DELETE_SUBMISSION_ATTACHMENT\"\n        })\n    }, (error) => {\n      console.log(error)\n    })\n}\n\n\n\nexport const getSubmissionAttachment = (opts) => (dispatch) => {\n    return SubmissionService.getSubmissionAttachment(opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION_ATTACHMENT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included,\n                    // total: data.data.meta.pagination.total\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeSubmissionAttachment = (payload, opts) => (dispatch) => {\n    return SubmissionService.storeSubmissionAttachment(payload, opts).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_SUBMISSION_ATTACHMENT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}"]},"metadata":{},"sourceType":"module"}