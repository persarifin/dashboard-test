{"ast":null,"code":"import PermissionService from \"../../service/permission\";\nimport { hideLoader, showLoader } from \"redux/actions/loader\";\nexport var getPermissions = function getPermissions(opts) {\n  return function (dispatch) {\n    return PermissionService.getPermissions(opts).then(function (response) {\n      dispatch(showLoader());\n      var roles = response.data && response.data.data ? response.data.data : [];\n      dispatch({\n        type: \"GET_PERMISSIONS\",\n        payload: {\n          data: roles\n        }\n      });\n      dispatch(hideLoader());\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject(error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/redux/actions/permission.js"],"names":["PermissionService","hideLoader","showLoader","getPermissions","opts","dispatch","then","response","roles","data","type","payload","Promise","resolve","error","reject"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,sBAAvC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAc;AACpD,WAAOL,iBAAiB,CAACG,cAAlB,CAAiCC,IAAjC,EAAuCE,IAAvC,CACL,UAACC,QAAD,EAAc;AACZF,MAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACA,UAAMM,KAAK,GAAGD,QAAQ,CAACE,IAAT,IAAkBF,QAAQ,CAACE,IAAT,CAAcA,IAAhC,GAAuCF,QAAQ,CAACE,IAAT,CAAcA,IAArD,GAA4D,EAA1E;AACAJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAE;AACPF,UAAAA,IAAI,EAAED;AADC;AAFF,OAAD,CAAR;AAMAH,MAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACA,aAAOW,OAAO,CAACC,OAAR,EAAP;AACD,KAZI,EAaL,UAACC,KAAD,EAAW;AACTT,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAIA,aAAOE,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;AACD,KAnBI,CAAP;AAqBD,GAtB6B;AAAA,CAAvB","sourcesContent":["import PermissionService from \"../../service/permission\";\nimport { hideLoader, showLoader } from \"redux/actions/loader\";\n\nexport const getPermissions = (opts) => (dispatch) => {\n  return PermissionService.getPermissions(opts).then(\n    (response) => {\n      dispatch(showLoader());\n      const roles = response.data  && response.data.data ? response.data.data : [];\n      dispatch({\n        type: \"GET_PERMISSIONS\",\n        payload: {\n          data: roles\n        },\n      });\n      dispatch(hideLoader())\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject(error);\n    }\n  );\n};"]},"metadata":{},"sourceType":"module"}