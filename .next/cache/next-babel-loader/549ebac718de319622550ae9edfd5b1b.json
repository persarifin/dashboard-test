{"ast":null,"code":"import BillingInvoicesService from \"../../service/billing_invoices\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\nexport var getBillingInvoices = function getBillingInvoices(opts) {\n  return function (dispatch) {\n    return BillingInvoicesService.getBillingInvoices(opts).then(function (data) {\n      dispatch({\n        type: \"GET_BILLING_INVOICES\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n          total: data.data.meta.pagination.total\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};\nexport var updateBillingInvoice = function updateBillingInvoice(id, payload, opts) {\n  return function (dispatch) {\n    return BillingInvoicesService.updateBillingInvoice(id, payload, opts).then(function (data) {\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};\nexport var updateBilling = function updateBilling(id, payload, opts) {\n  return function (dispatch) {\n    return BillingInvoicesService.updateBilling(id, payload, opts).then(function (data) {\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};\nexport var setSelectedCompanyId = function setSelectedCompanyId(company) {\n  return function (dispatch) {\n    return dispatch({\n      type: \"SET_SELECTED_COMPANY_ID\",\n      payload: {\n        selectedCompany: company\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/billing_invoices.js"],"names":["BillingInvoicesService","hideLoadingSpinner","getBillingInvoices","opts","dispatch","then","data","type","payload","included","total","meta","pagination","Promise","resolve","error","reject","updateBillingInvoice","id","updateBilling","setSelectedCompanyId","company","selectedCompany"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,gCAAnC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAc;AACxD,WAAOJ,sBAAsB,CAACE,kBAAvB,CAA0CC,IAA1C,EAAgDE,IAAhD,CACL,UAACC,IAAD,EAAU;AACRF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,sBADC;AAEPC,QAAAA,OAAO,EAAE;AACPF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADT;AAEPG,UAAAA,QAAQ,EAAEH,IAAI,CAACA,IAAL,CAAUG,QAFb;AAGPC,UAAAA,KAAK,EAAEJ,IAAI,CAACA,IAAL,CAAUK,IAAV,CAAeC,UAAf,CAA0BF;AAH1B;AAFF,OAAD,CAAR;AAQA,aAAOG,OAAO,CAACC,OAAR,EAAP;AACD,KAXI,EAYL,UAACC,KAAD,EAAW;AACTX,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAN,MAAAA,kBAAkB;AAClB,aAAOY,OAAO,CAACG,MAAR,EAAP;AACD,KAlBI,CAAP;AAoBD,GArBiC;AAAA,CAA3B;AAuBP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,EAAD,EAAKV,OAAL,EAAcL,IAAd;AAAA,SAAuB,UAACC,QAAD,EAAc;AACvE,WAAOJ,sBAAsB,CAACiB,oBAAvB,CAA4CC,EAA5C,EAAgDV,OAAhD,EAAyDL,IAAzD,EAA+DE,IAA/D,CACL,UAACC,IAAD,EAAU;AACR,aAAOO,OAAO,CAACC,OAAR,EAAP;AACD,KAHI,EAIL,UAACC,KAAD,EAAW;AACTX,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAN,MAAAA,kBAAkB;AAClB,aAAOY,OAAO,CAACG,MAAR,EAAP;AACD,KAVI,CAAP;AAYD,GAbmC;AAAA,CAA7B;AAeP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACD,EAAD,EAAKV,OAAL,EAAcL,IAAd;AAAA,SAAuB,UAACC,QAAD,EAAc;AAChE,WAAOJ,sBAAsB,CAACmB,aAAvB,CAAqCD,EAArC,EAAyCV,OAAzC,EAAkDL,IAAlD,EAAwDE,IAAxD,CACL,UAACC,IAAD,EAAU;AACR,aAAOO,OAAO,CAACC,OAAR,EAAP;AACD,KAHI,EAIL,UAACC,KAAD,EAAW;AACTX,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAN,MAAAA,kBAAkB;AAClB,aAAOY,OAAO,CAACG,MAAR,EAAP;AACD,KAVI,CAAP;AAYD,GAb4B;AAAA,CAAtB;AAeP,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO;AAAA,SAAI,UAAAjB,QAAQ,EAAI;AACzD,WAAOA,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,yBADQ;AAEdC,MAAAA,OAAO,EAAE;AACPc,QAAAA,eAAe,EAAED;AADV;AAFK,KAAD,CAAf;AAMD,GAP0C;AAAA,CAApC","sourcesContent":["import BillingInvoicesService from \"../../service/billing_invoices\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\n\nexport const getBillingInvoices = (opts) => (dispatch) => {\n  return BillingInvoicesService.getBillingInvoices(opts).then(\n    (data) => {\n      dispatch({\n        type: \"GET_BILLING_INVOICES\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n          total: data.data.meta.pagination.total,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateBillingInvoice = (id, payload, opts) => (dispatch) => {\n  return BillingInvoicesService.updateBillingInvoice(id, payload, opts).then(\n    (data) => {\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateBilling = (id, payload, opts) => (dispatch) => {\n  return BillingInvoicesService.updateBilling(id, payload, opts).then(\n    (data) => {\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\nexport const setSelectedCompanyId = company => dispatch => {\n  return dispatch({\n    type: \"SET_SELECTED_COMPANY_ID\",\n    payload: {\n      selectedCompany: company\n    }\n  });\n} "]},"metadata":{},"sourceType":"module"}