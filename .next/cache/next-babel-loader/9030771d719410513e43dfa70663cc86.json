{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/arifin/Documents/pretest/dashboard/src/components/CustomRadioButton.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nexport class CustomRadioButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n  }\n\n  render() {\n    const {\n      selected,\n      onChange,\n      text,\n      value\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modern-radio-container\",\n      onClick: () => {\n        onChange(value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `radio-outer-circle ${value !== selected && \"unselected\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `radio-inner-circle ${value !== selected && \"unselected-circle\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helper-text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCustomRadioButton.propTypes = {\n  text: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/components/CustomRadioButton.js"],"names":["PropTypes","React","Component","CustomRadioButton","render","selected","onChange","text","value","props","propTypes","node","isRequired","func","string"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCACvC,EADuC;AAAA;;AAG/CE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA;AAA5B,QAAsC,KAAKC,KAAjD;AACA,wBACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,OAJH;AAAA,8BAME;AACE,QAAA,SAAS,EAAG,sBAAqBA,KAAK,KAAKH,QAAV,IAAsB,YAAa,EADtE;AAAA,+BAGE;AACE,UAAA,SAAS,EAAG,sBAAqBG,KAAK,KAAKH,QAAV,IAC/B,mBAAoB;AAFxB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cANF,eAcE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8BE;AAA9B;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAvB8C;AA0BjDJ,iBAAiB,CAACO,SAAlB,GAA8B;AAC5BH,EAAAA,IAAI,EAAEP,SAAS,CAACW,IAAV,CAAeC,UADO;AAE5BN,EAAAA,QAAQ,EAAEN,SAAS,CAACa,IAAV,CAAeD,UAFG;AAG5BP,EAAAA,QAAQ,EAAEL,SAAS,CAACc,MAAV,CAAiBF,UAHC;AAI5BJ,EAAAA,KAAK,EAAER,SAAS,CAACc,MAAV,CAAiBF;AAJI,CAA9B","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\n\nexport class CustomRadioButton extends Component {\n  state = {};\n\n  render() {\n    const { selected, onChange, text, value } = this.props;\n    return (\n      <div\n        className=\"modern-radio-container\"\n        onClick={() => {\n          onChange(value);\n        }}\n      >\n        <div\n          className={`radio-outer-circle ${value !== selected && \"unselected\"}`}\n        >\n          <div\n            className={`radio-inner-circle ${value !== selected &&\n              \"unselected-circle\"}`}\n          />\n        </div>\n        <div className=\"helper-text\">{text}</div>\n      </div>\n    );\n  }\n}\n\nCustomRadioButton.propTypes = {\n  text: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}