{"ast":null,"code":"import RoleService from \"../../service/role\";\nimport { hideLoader, showLoader } from \"redux/actions/loader\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\nexport var getRole = function getRole(opts) {\n  return function (dispatch) {\n    return RoleService.getRole(opts).then(function (response) {\n      dispatch(showLoader());\n      var roles = response.data && response.data.data ? response.data.data : [];\n      var included = response.data && response.data.included ? response.data.included : [];\n      var meta = response.data && response.data.meta ? response.data.meta : {};\n      dispatch({\n        type: \"GET_ROLE\",\n        payload: {\n          data: roles,\n          included: included,\n          meta: meta\n        }\n      });\n      dispatch(hideLoader());\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      hideLoadingSpinner();\n      return Promise.reject(error);\n    });\n  };\n};\nexport var storeRole = function storeRole(payload) {\n  return function (dispatch) {\n    return RoleService.storeRole(payload).then(function (data) {\n      // dispatch({\n      //   type: \"STORE_ROLE\",\n      //   payload: {\n      //     data: data.data.data,\n      //   },\n      // });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateRole = function updateRole(payload) {\n  return function (dispatch) {\n    return RoleService.updateRole(payload).then(function (data) {\n      // dispatch({\n      //   type: \"UPDATE_ROLE\",\n      //   payload: {\n      //     data: data.data.data,\n      //   },\n      // });\n      return Promise.resolve();\n    }, function (error) {\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};\nexport var destroyRole = function destroyRole(id) {\n  return function (dispatch) {\n    return RoleService.deleteRole(id).then(function (data) {\n      dispatch({\n        type: \"DELETE_ROLE\"\n      });\n    }, function (error) {\n      hideLoadingSpinner();\n    });\n  };\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/role.js"],"names":["RoleService","hideLoader","showLoader","hideLoadingSpinner","getRole","opts","dispatch","then","response","roles","data","included","meta","type","payload","Promise","resolve","error","reject","storeRole","updateRole","destroyRole","id","deleteRole"],"mappings":"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","sourcesContent":["import RoleService from \"../../service/role\";\nimport { hideLoader, showLoader } from \"redux/actions/loader\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\n\nexport const getRole = (opts) => (dispatch) => {\n  return RoleService.getRole(opts).then(\n    (response) => {\n      dispatch(showLoader());\n      const roles =\n        response.data && response.data.data ? response.data.data : [];\n      const included =\n        response.data && response.data.included ? response.data.included : [];\n      const meta =\n        response.data && response.data.meta ? response.data.meta : {};\n      dispatch({\n        type: \"GET_ROLE\",\n        payload: {\n          data: roles,\n          included,\n          meta,\n        },\n      });\n      dispatch(hideLoader());\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport const storeRole = (payload) => (dispatch) => {\n  return RoleService.storeRole(payload).then(\n    (data) => {\n      // dispatch({\n      //   type: \"STORE_ROLE\",\n      //   payload: {\n      //     data: data.data.data,\n      //   },\n      // });\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateRole = (payload) => (dispatch) => {\n  return RoleService.updateRole(payload).then(\n    (data) => {\n      // dispatch({\n      //   type: \"UPDATE_ROLE\",\n      //   payload: {\n      //     data: data.data.data,\n      //   },\n      // });\n      return Promise.resolve();\n    },\n    (error) => {\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\nexport const destroyRole = (id) => (dispatch) => {\n  return RoleService.deleteRole(id).then(\n    (data) => {\n      dispatch({\n        type: \"DELETE_ROLE\",\n      });\n    },\n    (error) => {\n      hideLoadingSpinner();\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}