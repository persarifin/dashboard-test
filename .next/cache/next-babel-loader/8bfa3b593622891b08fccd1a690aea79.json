{"ast":null,"code":"const hashByCrypto = (algo, str) => {\n  return crypto.subtle.digest(algo, new TextEncoder(\"utf-8\").encode(str)).then(buf => {\n    return Array.prototype.map.call(new Uint8Array(buf), x => (\"00\" + x.toString(16)).slice(-2)).join(\"\");\n  });\n}; //hashAsync(\"SHA-256\", \"here_is_my_input_string\").then(outputHash => console.log(outputHash));\n\n\nexports.hashByCrypto = hashByCrypto;","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/libs/hashing.js"],"names":["hashByCrypto","algo","str","crypto","subtle","digest","TextEncoder","encode","then","buf","Array","prototype","map","call","Uint8Array","x","toString","slice","join","exports"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AAClC,SAAOC,MAAM,CAACC,MAAP,CACJC,MADI,CACGJ,IADH,EACS,IAAIK,WAAJ,CAAgB,OAAhB,EAAyBC,MAAzB,CAAgCL,GAAhC,CADT,EAEJM,IAFI,CAEEC,GAAD,IAAS;AACb,WAAOC,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CACJC,IADI,CACC,IAAIC,UAAJ,CAAeL,GAAf,CADD,EACuBM,CAAD,IAAO,CAAC,OAAOA,CAAC,CAACC,QAAF,CAAW,EAAX,CAAR,EAAwBC,KAAxB,CAA8B,CAAC,CAA/B,CAD7B,EAEJC,IAFI,CAEC,EAFD,CAAP;AAGD,GANI,CAAP;AAOD,CARD,C,CAUA;;;AACAC,OAAO,CAACnB,YAAR,GAAuBA,YAAvB","sourcesContent":["const hashByCrypto = (algo, str) => {\n  return crypto.subtle\n    .digest(algo, new TextEncoder(\"utf-8\").encode(str))\n    .then((buf) => {\n      return Array.prototype.map\n        .call(new Uint8Array(buf), (x) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    });\n};\n\n//hashAsync(\"SHA-256\", \"here_is_my_input_string\").then(outputHash => console.log(outputHash));\nexports.hashByCrypto = hashByCrypto;"]},"metadata":{},"sourceType":"script"}