{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/arifin/Documents/pretest/dashboard/src/pages/contents/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Button, Tabs, Tab, Row, Col, Card, Form, InputGroup, FormControl, Modal, Badge } from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport Layout from '../../components/Layout';\nimport { getContent, storeContent, updateContent, deleteContent, getContentCategory } from \"../../redux/actions/content\";\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport dayjs from \"dayjs\";\n\nclass index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSaveCategory\", async e => {\n      e.preventDefault();\n\n      if (this.state.tabIndex === -1) {\n        await this.props.storeContent(this.state.payloadContent);\n        toast.success(\"Data Berhasil di Simpan\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000\n        });\n      } else {\n        await this.props.updateContent(this.state.dataDetail.attributes.id, this.state.payloadContent, {});\n        toast.success(\"Data Berhasil di Update\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000\n        });\n      }\n\n      this.getData();\n      this.setState({\n        modal: false\n      });\n    });\n\n    _defineProperty(this, \"editData\", data => {\n      this.setState({\n        modal: true,\n        tabIndex: index,\n        dataDetail: data,\n        payloadContent: _objectSpread(_objectSpread({}, this.state.payloadContent), {}, {\n          content: data.attributes.content,\n          content_name: data.attributes.content_name,\n          date: dayjs(data.attributes.date).format(\"YYYY-MM-DD\"),\n          status: data.attributes.status,\n          category_id: data.attributes.category_id,\n          category_name: data.attributes.category_name\n        })\n      });\n    });\n\n    _defineProperty(this, \"getData\", async () => {\n      await this.props.getContent({}).then(() => {\n        this.setState({\n          data: this.props.data\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleDelete\", async id => {\n      await this.props.deleteContent(id).then(() => {\n        this.getData();\n        toast.success(\"Data Berhasil di Delete\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000\n        });\n      });\n    });\n\n    this.state = {\n      isServer: true,\n      columns: [{\n        name: 'ID',\n        selector: 'id',\n        sortable: true,\n        width: '20%'\n      }, {\n        name: 'Content Name',\n        selector: 'attributes.content_name',\n        sortable: true,\n        width: '65%'\n      }, {\n        name: 'Actions',\n        selector: (row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"mr-2\",\n            style: {\n              width: '15px'\n            },\n            src: \"https://storage.googleapis.com/spaces-semanggi-app/back-office/super-entity/png/border-color-24px.png\",\n            onClick: () => this.editData(row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '15px'\n            },\n            src: \"https://storage.googleapis.com/spaces-semanggi-app/back-office/super-entity/png/delete.png\",\n            onClick: () => this.handleDelete(row.attributes.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 213\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 48\n        }, this),\n        width: '10%'\n      }],\n      payloadContent: {\n        content_name: null,\n        content: null,\n        date: \"\",\n        status: null,\n        category_id: null\n      },\n      dataCategory: [],\n      modal: false,\n      tabIndex: -1,\n      dataDetail: null,\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getContentCategory({}).then(() => {\n      this.setState({\n        dataCategory: this.props.dataCategory\n      });\n    });\n    this.getData();\n    this.CKEditor = require(\"@ckeditor/ckeditor5-react\").CKEditor;\n    this.ClassicEditor = require(\"@ckeditor/ckeditor5-build-classic\");\n    this.setState({\n      isServer: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Content\",\n      classname: \"dashboard theme-light\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.modal,\n        onHide: () => this.setState({\n          modal: false,\n          tabIndex: -1,\n          statusProduct: null,\n          payloadContent: _objectSpread(_objectSpread({}, this.state.payloadContent), {}, {\n            content_name: \"\",\n            content: \"\",\n            date: \"\",\n            status: \"\",\n            category_id: \"\"\n          })\n        }),\n        backdrop: \"static\",\n        keyboard: false,\n        centered: true,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          style: {\n            border: 'none'\n          },\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: this.state.tabIndex == -1 ? 'Create Contents' : 'Edit Contents'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.saveProduct,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"p-5\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                className: \"pt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Content Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  defaultValue: this.state.payloadContent.content_name,\n                  onChange: e => this.setState({\n                    payloadContent: _objectSpread(_objectSpread({}, this.state.payloadContent), {}, {\n                      content_name: e.target.value\n                    })\n                  }),\n                  min: \"0\",\n                  placeholder: \"Category Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"pt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                className: \"pt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  defaultValue: this.state.payloadContent.category_id,\n                  onChange: e => this.setState({\n                    payloadContent: _objectSpread(_objectSpread({}, this.state.payloadContent), {}, {\n                      category_id: e.target.value\n                    })\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-Chose Category-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 29\n                  }, this), this.state.dataCategory && this.state.dataCategory.map((data, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: data.id,\n                    children: data.attributes.category_name\n                  }, data.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 37\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"pt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                className: \"pt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  defaultValue: this.state.payloadContent.date,\n                  onChange: e => this.setState({\n                    payloadContent: _objectSpread(_objectSpread({}, this.state.payloadContent), {}, {\n                      date: e.target.value\n                    })\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"pt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                className: \"pt-1\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  defaultValue: this.state.payloadContent.status,\n                  onChange: e => this.setState({\n                    payloadContent: _objectSpread(_objectSpread({}, this.state.payloadContent), {}, {\n                      status: e.target.value\n                    })\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-Chose Status-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"DRAFT\",\n                    children: \"DRAFT\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ARCHIVED\",\n                    children: \"ARCHIVED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"PUBLISHED\",\n                    children: \"PUBLISHED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"PENDING\",\n                    children: \"PENDING\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"pt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(this.CKEditor, {\n                  editor: this.ClassicEditor,\n                  data: this.state.payloadContent.content,\n                  onChange: (event, editor) => {\n                    const data = editor.getData();\n                    this.setState({\n                      payloadContent: _objectSpread(_objectSpread({}, this.state.payloadContent), {}, {\n                        content: data\n                      })\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            style: {\n              border: 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => this.setState({\n                modal: false,\n                tabIndex: -1,\n                statusProduct: null,\n                payloadContent: _objectSpread(_objectSpread({}, this.state.payloadContent), {}, {\n                  content_name: \"\",\n                  content: \"\",\n                  date: \"\",\n                  status: \"\",\n                  category_id: \"\"\n                })\n              }),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              onClick: this.handleSaveCategory,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"pt-15\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          md: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: 'white',\n              borderRadius: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"position-relative show-grid\",\n              style: {\n                margin: '20px 20px 0px 20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  className: \"position-relative show-grid\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: 10,\n                    children: /*#__PURE__*/_jsxDEV(Form, {\n                      children: /*#__PURE__*/_jsxDEV(Form.Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          xs: \"4\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            htmlFor: \"inlineFormInputGroup\",\n                            srOnly: true,\n                            children: \"Find Contents By Name\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 272,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                            className: \"mb-2\",\n                            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                                style: {\n                                  backgroundColor: 'white'\n                                },\n                                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fa fa-search\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 277,\n                                  columnNumber: 102\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 277,\n                                columnNumber: 49\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 276,\n                              columnNumber: 49\n                            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                              id: \"inlineFormInputGroup\",\n                              placeholder: \"Find Contents By Name\",\n                              onKeyPress: this.handleSearch,\n                              onChange: e => this.setState({\n                                inputSearch: e.target.value\n                              })\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 279,\n                              columnNumber: 49\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 275,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 2,\n                    style: {\n                      textAlign: 'end'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"success\",\n                      onClick: () => {\n                        this.setState({\n                          modal: true\n                        });\n                      },\n                      children: \"Add Content\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(DataTable, {\n                      data: this.state.data,\n                      columns: this.state.columns,\n                      highlightOnHover: true,\n                      noHeader: true,\n                      paginationTotalRows: this.props.total,\n                      paginationPerPage: this.state.num,\n                      pagination: true,\n                      paginationServer: true,\n                      onChangePage: this.handlePageChange,\n                      onChangeRowsPerPage: this.handlePerRowsChange // paginationServer\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    data,\n    total,\n    dataCategory\n  } = state.content;\n  return {\n    dataCategory,\n    data,\n    total\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getContentCategory: opts => dispatch(getContentCategory(opts)),\n    getContent: opts => dispatch(getContent(opts)),\n    storeContent: (payload, opts) => dispatch(storeContent(payload, opts)),\n    updateContent: (id, payload, opts) => dispatch(updateContent(id, payload, opts)),\n    deleteContent: id => dispatch(deleteContent(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/pages/contents/index.js"],"names":["React","Button","Tabs","Tab","Row","Col","Card","Form","InputGroup","FormControl","Modal","Badge","DataTable","Layout","getContent","storeContent","updateContent","deleteContent","getContentCategory","connect","toast","dayjs","index","Component","constructor","props","e","preventDefault","state","tabIndex","payloadContent","success","position","POSITION","TOP_RIGHT","autoClose","dataDetail","attributes","id","getData","setState","modal","data","content","content_name","date","format","status","category_id","category_name","then","isServer","columns","name","selector","sortable","width","row","editData","handleDelete","dataCategory","componentDidMount","CKEditor","require","ClassicEditor","render","statusProduct","border","saveProduct","target","value","map","event","editor","handleSaveCategory","backgroundColor","borderRadius","margin","handleSearch","inputSearch","textAlign","total","num","handlePageChange","handlePerRowsChange","mapStateToProps","mapDispatchToProps","dispatch","opts","payload"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Button,Tabs, Tab, Row, Col, Card, Form, InputGroup, FormControl, Modal, Badge} from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport Layout from '../../components/Layout';\nimport { getContent, storeContent, updateContent, deleteContent, getContentCategory } from \"../../redux/actions/content\";\nimport {connect} from 'react-redux'\nimport {toast} from 'react-toastify'\nimport dayjs from \"dayjs\";\n\n\nclass index extends React.Component {\n    \n  constructor(props){\n    super(props)\n    this.state = {\n            isServer: true,\n            columns:[\n                {\n                    name: 'ID',\n                    selector: 'id',\n                    sortable: true,\n                    width: '20%'\n                },\n                {\n                    name: 'Content Name',\n                    selector: 'attributes.content_name',\n                    sortable: true,\n                    width: '65%'\n                },\n                {\n                    name: 'Actions',\n                    selector: (row, index) => (<div>\n                    <img className=\"mr-2\" style={{width: '15px'}} src=\"https://storage.googleapis.com/spaces-semanggi-app/back-office/super-entity/png/border-color-24px.png\" onClick={ () => this.editData(row)} /><img style={{width: '15px'}} src=\"https://storage.googleapis.com/spaces-semanggi-app/back-office/super-entity/png/delete.png\" onClick={() => this.handleDelete(row.attributes.id)} /></div>),\n                    width: '10%'\n                }\n            ],\n            payloadContent: {\n                content_name: null,\n                content: null,\n                date: \"\",\n                status: null,\n                category_id: null,\n            },\n            dataCategory: [],\n            modal: false,\n            tabIndex: -1,\n            dataDetail: null,\n            data: []\n        }\n\n    }\n\n\n    handleSaveCategory = async (e) => {\n        e.preventDefault()\n        if(this.state.tabIndex === -1){\n            await this.props.storeContent(this.state.payloadContent)\n            toast.success(\"Data Berhasil di Simpan\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000\n            })\n        }else{\n            await this.props.updateContent(this.state.dataDetail.attributes.id, this.state.payloadContent, {});\n            toast.success(\"Data Berhasil di Update\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000\n            })\n        }\n        this.getData()\n        this.setState({\n            modal: false\n        })\n    }  \n\n    async componentDidMount() {\n        await this.props.getContentCategory({}).then(() => {\n            this.setState({\n                dataCategory: this.props.dataCategory\n            })\n        })\n        this.getData()\n        this.CKEditor = require(\"@ckeditor/ckeditor5-react\").CKEditor;\n        this.ClassicEditor = require(\"@ckeditor/ckeditor5-build-classic\");\n        this.setState({ isServer: false });\n    }\n\n    editData = (data) => {\n        this.setState({\n            modal:true, \n            tabIndex:index, \n            dataDetail:data,\n            payloadContent: {\n                ...this.state.payloadContent,\n                content: data.attributes.content,\n                content_name: data.attributes.content_name,\n                date: dayjs(data.attributes.date).format(\"YYYY-MM-DD\"),\n                status: data.attributes.status,\n                category_id: data.attributes.category_id,\n                category_name: data.attributes.category_name\n            }\n        })\n    }\n\n    getData = async () => {\n        await this.props.getContent({}).then(() => {\n            this.setState({\n                data: this.props.data\n            })\n        })\n    }\n\n    handleDelete = async (id) => {\n        await this.props.deleteContent(id).then(() => {\n            this.getData()\n            toast.success(\"Data Berhasil di Delete\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000\n            })\n        })\n    }\n\n    render () {\n      return (\n        \n        <Layout title=\"Content\" classname=\"dashboard theme-light\">\n        {/* Modal Form */}\n        <Modal\n            show={this.state.modal}\n            onHide={() => this.setState({\n                modal: false, \n                tabIndex: -1, \n                statusProduct: null,\n                payloadContent: {\n                    ...this.state.payloadContent,\n                    content_name: \"\",\n                    content: \"\",\n                    date: \"\",\n                    status: \"\",\n                    category_id: \"\",\n                }\n            })}\n            backdrop=\"static\"\n            keyboard={false}\n            centered\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n        >\n            <Modal.Header style={{ border:'none' }} closeButton>\n            <Modal.Title>{this.state.tabIndex == -1 ? 'Create Contents' : 'Edit Contents'}</Modal.Title>\n            </Modal.Header>\n            <Form onSubmit={this.saveProduct}>\n            <Modal.Body className=\"p-5\">\n                <Row>\n                    <Col xs={4} className=\"pt-1\">\n                        <strong>Content Name</strong>\n                    </Col>\n                    <Col xs={8}>\n                        <Form.Control type=\"text\" defaultValue={this.state.payloadContent.content_name} onChange={(e) => this.setState({\n                            payloadContent:{\n                                ...this.state.payloadContent,\n                                content_name: e.target.value\n                            },\n                            \n                        })} min=\"0\" placeholder=\"Category Name\" />\n                    </Col>\n                </Row>\n                <Row className=\"pt-3\">\n                    <Col xs={4} className=\"pt-1\">\n                        <strong>Category</strong>\n                    </Col>\n                    <Col xs={8}>\n                        <Form.Control as=\"select\" defaultValue={this.state.payloadContent.category_id} onChange={(e) => this.setState({\n                            payloadContent:{\n                                ...this.state.payloadContent,\n                                category_id: e.target.value\n                            },\n                        })}>\n                            <option value=\"\">-Chose Category-</option>\n                            {\n                                this.state.dataCategory && this.state.dataCategory.map((data, index) => (\n                                    <option key={data.id} value={data.id}>{data.attributes.category_name}</option>\n                                ))\n                            }\n                        </Form.Control>\n                    </Col>\n                </Row>\n                <Row className=\"pt-3\">\n                    <Col xs={4} className=\"pt-1\">\n                        <strong>Date</strong>\n                    </Col>\n                    <Col xs={8}>\n                        <Form.Control type=\"date\" defaultValue={this.state.payloadContent.date} onChange={(e) => this.setState({\n                            payloadContent:{\n                                ...this.state.payloadContent,\n                                date: e.target.value\n                            },\n                            \n                        })} />\n                    </Col>\n                </Row>\n                <Row className=\"pt-3\">\n                    <Col xs={4} className=\"pt-1\">\n                        <strong>Status</strong>\n                    </Col>\n                    <Col xs={8}>\n                        <Form.Control as=\"select\" defaultValue={this.state.payloadContent.status} onChange={(e) => \n                            this.setState({\n                                payloadContent:{\n                                    ...this.state.payloadContent,\n                                    status: e.target.value\n                                },\n                            })}\n                        >\n                            <option value=\"\">-Chose Status-</option>\n                            <option value=\"DRAFT\">DRAFT</option>\n                            <option value=\"ARCHIVED\">ARCHIVED</option>\n                            <option value=\"PUBLISHED\">PUBLISHED</option>\n                            <option value=\"PENDING\">PENDING</option>\n                        </Form.Control>\n                    </Col>\n                </Row>\n                <Row className=\"pt-3\">\n                    <Col xs={4}><strong>Content</strong></Col>\n                    <Col xs={8}>\n                        <this.CKEditor\n                            editor={ this.ClassicEditor }\n                            data={this.state.payloadContent.content}\n                            onChange={ ( event, editor ) => {\n                                const data = editor.getData();\n                                this.setState({\n                                    payloadContent:{\n                                        ...this.state.payloadContent,\n                                        content: data\n                                    },\n                                })\n                            } }\n                        />\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer style={{ border:'none' }}>\n            <Button variant=\"secondary\" onClick={() => this.setState({\n                modal: false, \n                tabIndex: -1, \n                statusProduct: null,\n                payloadContent: {\n                    ...this.state.payloadContent,\n                    content_name: \"\",\n                    content: \"\",\n                    date: \"\",\n                    status: \"\",\n                    category_id: \"\",\n                }\n            })}>\n                Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\" onClick={this.handleSaveCategory}>Save</Button>\n            </Modal.Footer>\n            </Form>\n        </Modal>\n\n        <Row className=\"pt-15\">\n            <Col lg={12} md={12} sm={12}>\n                <Card style={{ backgroundColor: 'white', borderRadius:'10px' }}>\n                    <Row className=\"position-relative show-grid\" style={{ margin:'20px 20px 0px 20px' }}>\n                    <Col xs={12}>\n                        <Row className=\"position-relative show-grid\" >\n                            <Col xs={10}>\n                                <Form>\n                                    <Form.Row>\n                                        <Col xs=\"4\">\n                                            <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\n                                                Find Contents By Name\n                                            </Form.Label>\n                                            <InputGroup className=\"mb-2\">\n                                                <InputGroup.Prepend>\n                                                <InputGroup.Text style={{ backgroundColor:'white' }}><i className=\"fa fa-search\"></i></InputGroup.Text>\n                                                </InputGroup.Prepend>\n                                                <FormControl id=\"inlineFormInputGroup\" placeholder=\"Find Contents By Name\" onKeyPress={this.handleSearch} onChange={(e) => this.setState({ inputSearch: e.target.value })} />\n                                            </InputGroup>\n                                        </Col>\n                                    </Form.Row>\n                                </Form>\n                            </Col>\n                            <Col xs={2} style={{ textAlign:'end' }}>\n                                <Button variant=\"success\" onClick={() => {\n                                    this.setState({modal: true})\n                                }}>Add Content</Button>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12}>\n                                <DataTable\n                                    data={this.state.data}\n                                    columns={this.state.columns}\n                                    highlightOnHover\n                                    noHeader={true}\n                                    paginationTotalRows={this.props.total}\n                                    paginationPerPage={this.state.num}\n                                    pagination\n                                    paginationServer\n                                    onChangePage={this.handlePageChange}\n                                    onChangeRowsPerPage={this.handlePerRowsChange}\n                                    // paginationServer\n                                />\n                            </Col>\n                        </Row>\n                            \n                    </Col>\n                    </Row>\n                </Card>\n            </Col>\n        </Row>\n        </Layout>\n      );\n    }\n\n  }\n  function mapStateToProps ( state ) {\n   \n    const { data, total, dataCategory } = state.content;\n    return {\n        dataCategory,\n        data,\n        total\n    };\n}\n  \n  function mapDispatchToProps (dispatch) {\n    return {\n        getContentCategory: (opts) => dispatch(getContentCategory(opts)),\n        getContent: (opts) => dispatch(getContent(opts)),\n        storeContent: (payload, opts) => dispatch(storeContent(payload, opts)),\n        updateContent: (id, payload, opts) => dispatch(updateContent(id, payload, opts)),\n        deleteContent: (id) => dispatch(deleteContent(id)),\n    }\n  }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);\n  "]},"metadata":{},"sourceType":"module"}