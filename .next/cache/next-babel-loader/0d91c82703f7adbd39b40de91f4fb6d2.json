{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/arifin/Documents/pretest/dashboard/src/components/Header.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { Nav, NavDropdown, FormControl, Form, Badge, Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"redux/actions/auth\";\nimport ModalCustom from './ModalCustom';\nimport { changePassword } from './../redux/actions/user';\nimport { alertSuccess } from './alert';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChangePassword\", e => {\n      e.preventDefault();\n      let payload = {\n        password: this.state.password,\n        password_confirmation: this.state.confirm_password\n      };\n      this.props.changePassword(payload).then(data => {\n        this.setState({\n          modal: false\n        });\n        alertSuccess('Change Password Is Successfully');\n      });\n    });\n\n    _defineProperty(this, \"handleLogOut\", e => {\n      if (e) e.preventDefault();\n      this.props.logout();\n      Router.replace(\"/login\");\n    });\n\n    this.state = {\n      modal: false,\n      password: null,\n      confirm_password: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Nav, {\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n        style: {\n          cursor: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.props.user && this.props.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n        id: \"basic-nav-dropdown\",\n        className: \"profile-dropdown  p-0  mr-2 position-relative\",\n        children: /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n          className: \"pt-2 pb-2 theme-container\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: this.handleLogOut,\n            className: \"child-nav-list dropdown-item buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user\n  } = state.auth;\n  return {\n    user\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changePassword: (payload, opts) => dispatch(changePassword(payload, opts)),\n    logout: () => dispatch(logout())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/components/Header.js"],"names":["React","Link","Router","Nav","NavDropdown","FormControl","Form","Badge","Col","Row","connect","logout","ModalCustom","changePassword","alertSuccess","Header","Component","constructor","props","e","preventDefault","payload","password","state","password_confirmation","confirm_password","then","data","setState","modal","replace","render","cursor","user","name","handleLogOut","mapStateToProps","auth","mapDispatchToProps","dispatch","opts"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { Nav, NavDropdown, FormControl, Form, Badge, Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"redux/actions/auth\";\nimport ModalCustom from './ModalCustom'\nimport {changePassword} from './../redux/actions/user'\nimport {alertSuccess} from './alert'\n\nclass Header extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      modal:false,\n      password: null,\n      confirm_password: null\n    }\n  }\n\n  handleChangePassword = (e) => {\n    e.preventDefault();\n    let payload = {\n      password: this.state.password,\n      password_confirmation: this.state.confirm_password\n    }\n    this.props.changePassword(payload).then((data) => {\n      this.setState({\n        modal: false\n      })\n      alertSuccess('Change Password Is Successfully')\n    })\n  }\n\n  handleLogOut = (e) => {\n    if (e) e.preventDefault();\n    this.props.logout();\n    Router.replace(\"/login\");\n  };\n  render() {\n    return (\n      <Nav className=\"align-items-center\">\n        <Nav.Link style={{ cursor: \"auto\" }}>\n          {/* <Link href=\"#\"> */}\n          <span>{this.props.user && this.props.user.name}</span>\n          {/* </Link> */}\n        </Nav.Link>\n        <NavDropdown\n          id=\"basic-nav-dropdown\"\n          className=\"profile-dropdown  p-0  mr-2 position-relative\"\n        >\n          <NavDropdown.Item className=\"pt-2 pb-2 theme-container\">\n            <a onClick={this.handleLogOut} className=\"child-nav-list dropdown-item buttons\">\n              <p className=\"mb-0\">Log Out</p>\n            </a>\n          </NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n};\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changePassword: (payload, opts) => dispatch(changePassword(payload, opts)),\n    logout: () => dispatch(logout())\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}