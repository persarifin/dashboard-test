{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseService from './baseService.js';\nimport cloneDeep from 'lodash/cloneDeep';\n\nvar SubmissionService = /*#__PURE__*/function (_BaseService) {\n  _inherits(SubmissionService, _BaseService);\n\n  var _super = _createSuper(SubmissionService);\n\n  function SubmissionService() {\n    _classCallCheck(this, SubmissionService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SubmissionService, [{\n    key: \"getSubmission\",\n    value: function getSubmission() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.endPoint = \"/get-submissions\";\n      return this.get(opts);\n    }\n  }, {\n    key: \"getSubmissionComment\",\n    value: function getSubmissionComment() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.endPoint = '/get-submission-comments';\n      return this.get(opts);\n    }\n  }, {\n    key: \"updateFulfilled\",\n    value: function updateFulfilled(id, payload) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.endPoint = '/update-fullfilments';\n      return this.putOne(id, payload, opts);\n    }\n  }, {\n    key: \"storeSubmission\",\n    value: function storeSubmission(payload) {\n      this.endPoint = '/submissions';\n      return this.post(payload);\n    }\n  }, {\n    key: \"getSubmissionById\",\n    value: function getSubmissionById(id) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/submissions';\n      return this.getOne(id, opts);\n    }\n  }, {\n    key: \"updateSubmission\",\n    value: function updateSubmission(id, payload) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.endPoint = '/submissions';\n      return this.putOne(id, payload, opts);\n    }\n  }, {\n    key: \"updateStatusSubmission\",\n    value: function updateStatusSubmission(id, payload) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.endPoint = '/update-statuses';\n      return this.putOne(id, payload, opts);\n    }\n  }, {\n    key: \"getSubmissionCategory\",\n    value: function getSubmissionCategory(payload) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/get-submission-categories?filter[submission_type][is]=' + payload.type;\n      return this.get(opts);\n    }\n  }, {\n    key: \"storeSubmissionCategory\",\n    value: function storeSubmissionCategory(payload) {\n      this.endPoint = '/submission-categories';\n      return this.post(payload);\n    }\n  }, {\n    key: \"updateSubmissionCategory\",\n    value: function updateSubmissionCategory(payload) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/submission-categories/' + payload.id;\n      return this.post(payload);\n    }\n  }, {\n    key: \"deleteSubmissionCategory\",\n    value: function deleteSubmissionCategory(id) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/submission-categories';\n      return this[\"delete\"](id, opts);\n    }\n  }, {\n    key: \"deleteSubmission\",\n    value: function deleteSubmission(id) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/submissions';\n      return this[\"delete\"](id, opts);\n    }\n  }, {\n    key: \"storeSubmissionComment\",\n    value: function storeSubmissionComment(payload) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/submission-comments';\n      return this.post(payload, opts);\n    }\n  }, {\n    key: \"deleteSubmissionComment\",\n    value: function deleteSubmissionComment(id) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/submission-comments';\n      return this[\"delete\"](id, opts);\n    }\n  }, {\n    key: \"getSubmissionAttachment\",\n    value: function getSubmissionAttachment() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.endPoint = '/get-submission-attachments';\n      return this.get(opts);\n    }\n  }, {\n    key: \"storeSubmissionAttachment\",\n    value: function storeSubmissionAttachment(payload) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = \"/submission-attachments\";\n      var newOpts = cloneDeep(opts, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return this.post(payload, newOpts);\n    }\n  }, {\n    key: \"deleteSubmissionAttachment\",\n    value: function deleteSubmissionAttachment(id) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.endPoint = '/submission-attachments';\n      return this[\"delete\"](id, opts);\n    }\n  }]);\n\n  return SubmissionService;\n}(BaseService);\n\nexport default new SubmissionService();","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/service/submissoin.js"],"names":["BaseService","cloneDeep","SubmissionService","opts","endPoint","get","id","payload","putOne","post","getOne","type","newOpts","headers"],"mappings":"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","sourcesContent":["import BaseService from './baseService.js'\nimport cloneDeep from 'lodash/cloneDeep'\n\nclass SubmissionService extends BaseService{\n\n    getSubmission(opts = {}){\n        this.endPoint = `/get-submissions`\n        return this.get(opts)\n    }\n\n    getSubmissionComment(opts = {}){\n        this.endPoint = '/get-submission-comments'\n        return this.get(opts)\n    }\n\n    updateFulfilled(id, payload, opts = {}){\n        this.endPoint = '/update-fullfilments'\n        return this.putOne(id, payload, opts);\n    }\n    \n    storeSubmission(payload){\n        this.endPoint = '/submissions'\n        return this.post(payload);\n    }\n\n    getSubmissionById(id, opts = {}){\n        this.endPoint = '/submissions'\n        \n        return this.getOne(id, opts)\n    }\n\n    updateSubmission(id, payload, opts ={}){\n        this.endPoint = '/submissions'\n        return this.putOne(id, payload, opts)\n    }\n\n    updateStatusSubmission(id, payload, opts ={}){\n        this.endPoint = '/update-statuses'\n        return this.putOne(id, payload, opts)\n    }\n\n    getSubmissionCategory(payload, opts = {}){\n        this.endPoint = '/get-submission-categories?filter[submission_type][is]=' + payload.type\n        return this.get(opts)\n    }\n\n    storeSubmissionCategory(payload){\n        this.endPoint = '/submission-categories'\n        return this.post(payload);\n    }\n\n    updateSubmissionCategory(payload, opts ={}){\n        this.endPoint = '/submission-categories/' + payload.id\n        return this.post(payload)\n    }\n\n    deleteSubmissionCategory(id, opts = {}){\n        this.endPoint = '/submission-categories'\n        return this.delete(id, opts)\n    }\n\n    deleteSubmission(id, opts = {}){\n        this.endPoint = '/submissions'\n        return this.delete(id, opts)\n    }\n\n    storeSubmissionComment(payload, opts = {}){\n        this.endPoint = '/submission-comments'\n        return this.post(payload, opts);\n    }\n\n    deleteSubmissionComment(id, opts = {}){\n        this.endPoint = '/submission-comments'\n        return this.delete(id, opts)\n    }\n\n    getSubmissionAttachment(opts = {}){\n        this.endPoint = '/get-submission-attachments'\n        return this.get(opts);\n    }\n\n    storeSubmissionAttachment(payload, opts = {}){\n        this.endPoint = \"/submission-attachments\"\n        const newOpts = cloneDeep(opts, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n        return this.post(payload, newOpts);\n    }\n\n    deleteSubmissionAttachment(id, opts = {}){\n        this.endPoint = '/submission-attachments'\n        return this.delete(id, opts)\n    }\n}\n\nexport default new SubmissionService()"]},"metadata":{},"sourceType":"module"}