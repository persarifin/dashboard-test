{"ast":null,"code":"import SubmissionService from '../../service/submissoin';\nexport const getSubmission = opts => dispatch => {\n  return SubmissionService.getSubmission(opts).then(data => {\n    dispatch({\n      type: \"GET_SUBMISSION\",\n      payload: {\n        data: data.data.data,\n        include: data.data.included,\n        total: data.data.meta.pagination.total,\n        total_amount: data.data.total_profit,\n        total_potensial: data.data.total_potensial\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const getSubmissionById = (id, opts) => dispatch => {\n  return SubmissionService.getSubmissionById(id, opts).then(data => {\n    dispatch({\n      type: \"GET_SUBMISSION_ID\",\n      payload: {\n        data: data.data.data,\n        include: data.data.included\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const updateSubmission = (id, payload) => dispatch => {\n  return SubmissionService.updateSubmission(id, payload).then(data => {\n    dispatch({\n      type: \"SUBMISSION_UPDATE\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const updateStatusSubmission = (id, payload, opts) => dispatch => {\n  return SubmissionService.updateStatusSubmission(id, payload, opts).then(data => {\n    dispatch({\n      type: \"SUBMISSION_UPDATE_STATUS\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const updateFulfilledSubmission = (id, payload, opts) => dispatch => {\n  return SubmissionService.updateFulfilled(id, payload, opts).then(data => {\n    dispatch({\n      type: \"SUBMISSION_UPDATE_FULFILLED\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const getSubmissionDraft = payload => dispatch => {\n  return SubmissionService.getSubmission(payload).then(data => {\n    dispatch({\n      type: \"GET_SUBMISSION_DRAFT\",\n      payload: {\n        data: data.data.data,\n        include: data.data.include,\n        total: data.data.meta.pagination.total\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const storeSubmission = payload => dispatch => {\n  return SubmissionService.storeSubmission(payload).then(data => {\n    dispatch({\n      type: \"STORE_SUBMISSION\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const getSubmissionCategory = payload => dispatch => {\n  return SubmissionService.getSubmissionCategory(payload).then(data => {\n    dispatch({\n      type: \"GET_CATEGORY_SUBMISSION\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const storeSubmissionCategory = payload => dispatch => {\n  return SubmissionService.storeSubmissionCategory(payload).then(data => {\n    dispatch({\n      type: \"STORE_CATEGORY_SUBMISSION\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const updateSubmissionCategory = payload => dispatch => {\n  return SubmissionService.updateSubmissionCategory(payload).then(data => {\n    dispatch({\n      type: \"UPDATE_CATEGORY_SUBMISSION\",\n      payload: {\n        data: data.data.data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const destroy = id => dispatch => {\n  return SubmissionService.deleteSubmissionCategory(id).then(data => {\n    dispatch({\n      type: \"DELETE_CATEGORY_SUBMISSION\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const destroySubmission = id => dispatch => {\n  return SubmissionService.deleteSubmission(id).then(data => {\n    dispatch({\n      type: \"DELETE_SUBMISSION\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const getSubmissionComment = opts => dispatch => {\n  return SubmissionService.getSubmissionComment(opts).then(data => {\n    dispatch({\n      type: \"GET_SUBMISSION_COMMENT\",\n      payload: {\n        data: data.data.data,\n        include: data.data.included // total: data.data.meta.pagination.total\n\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const storeSubmissionComment = (payload, opts) => dispatch => {\n  return SubmissionService.storeSubmissionComment(payload, opts).then(data => {\n    dispatch({\n      type: \"STORE_SUBMISSION_COMMENT\",\n      payload: {\n        data: data.data.data,\n        include: data.data.included\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const destroySubmissionComment = id => dispatch => {\n  return SubmissionService.deleteSubmissionComment(id).then(data => {\n    dispatch({\n      type: \"DELETE_SUBMISSION_COMMENT\"\n    });\n  }, error => {\n    console.log(error);\n  });\n};\nexport const destroySubmissionAttachment = id => dispatch => {\n  return SubmissionService.deleteSubmissionAttachment(id).then(data => {\n    dispatch({\n      type: \"DELETE_SUBMISSION_ATTACHMENT\"\n    });\n  }, error => {\n    console.log(error);\n  });\n};\nexport const getSubmissionAttachment = opts => dispatch => {\n  return SubmissionService.getSubmissionAttachment(opts).then(data => {\n    dispatch({\n      type: \"GET_SUBMISSION_ATTACHMENT\",\n      payload: {\n        data: data.data.data,\n        include: data.data.included // total: data.data.meta.pagination.total\n\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const storeSubmissionAttachment = (payload, opts) => dispatch => {\n  return SubmissionService.storeSubmissionAttachment(payload, opts).then(data => {\n    dispatch({\n      type: \"STORE_SUBMISSION_ATTACHMENT\",\n      payload: {\n        data: data.data.data,\n        include: data.data.included\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/submission.js"],"names":["SubmissionService","getSubmission","opts","dispatch","then","data","type","payload","include","included","total","meta","pagination","total_amount","total_profit","total_potensial","Promise","resolve","error","reject","getSubmissionById","id","updateSubmission","updateStatusSubmission","updateFulfilledSubmission","updateFulfilled","getSubmissionDraft","storeSubmission","getSubmissionCategory","storeSubmissionCategory","updateSubmissionCategory","destroy","deleteSubmissionCategory","destroySubmission","deleteSubmission","getSubmissionComment","storeSubmissionComment","destroySubmissionComment","deleteSubmissionComment","console","log","destroySubmissionAttachment","deleteSubmissionAttachment","getSubmissionAttachment","storeSubmissionAttachment"],"mappings":"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","sourcesContent":["import SubmissionService from '../../service/submissoin'\n\nexport const getSubmission = (opts) => (dispatch) => {\n    return SubmissionService.getSubmission(opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included,\n                    total: data.data.meta.pagination.total,\n                    total_amount: data.data.total_profit,\n                    total_potensial: data.data.total_potensial\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const getSubmissionById = (id, opts) => (dispatch) => {\n    return SubmissionService.getSubmissionById(id, opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION_ID\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateSubmission = (id, payload) => (dispatch) => {\n    return SubmissionService.updateSubmission(id, payload).then(\n        (data) => {\n            \n            dispatch({\n                type: \"SUBMISSION_UPDATE\",\n                payload: {\n                    data: data.data.data,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateStatusSubmission = (id, payload, opts) => (dispatch) => {\n    return SubmissionService.updateStatusSubmission(id, payload, opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"SUBMISSION_UPDATE_STATUS\",\n                payload: {\n                    data: data.data.data,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateFulfilledSubmission = (id, payload, opts) => (dispatch) => {\n    return SubmissionService.updateFulfilled(id, payload, opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"SUBMISSION_UPDATE_FULFILLED\",\n                payload: {\n                    data: data.data.data,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const getSubmissionDraft = (payload) => (dispatch) => {\n    return SubmissionService.getSubmission(payload).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION_DRAFT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.include,\n                    total: data.data.meta.pagination.total\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeSubmission = (payload) => (dispatch) => {\n    return SubmissionService.storeSubmission(payload).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_SUBMISSION\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\n\n\nexport const getSubmissionCategory = (payload) => (dispatch) => {\n    return SubmissionService.getSubmissionCategory(payload).then(\n        (data) => {\n            dispatch({\n                type: \"GET_CATEGORY_SUBMISSION\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeSubmissionCategory = (payload) => (dispatch) => {\n    return SubmissionService.storeSubmissionCategory(payload).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_CATEGORY_SUBMISSION\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateSubmissionCategory = (payload) => (dispatch) => {\n    return SubmissionService.updateSubmissionCategory(payload).then(\n        (data) => {\n            dispatch({\n                type: \"UPDATE_CATEGORY_SUBMISSION\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const destroy = (id) => (dispatch) => {\n    return SubmissionService.deleteSubmissionCategory(id).then((data) => {\n        dispatch({\n            type: \"DELETE_CATEGORY_SUBMISSION\"\n        })\n        return Promise.resolve();\n    }, (error) => {\n        dispatch({\n            type: \"FAIL\",\n        });\n    \n        return Promise.reject();\n    })\n}\n\nexport const destroySubmission = (id) => (dispatch) => {\n    return SubmissionService.deleteSubmission(id).then((data) => {\n        dispatch({\n            type: \"DELETE_SUBMISSION\"\n        })\n        return Promise.resolve();\n    }, (error) => {\n        dispatch({\n            type: \"FAIL\",\n        });\n    \n        return Promise.reject();\n    })\n}\n\nexport const getSubmissionComment = (opts) => (dispatch) => {\n    return SubmissionService.getSubmissionComment(opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION_COMMENT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included,\n                    // total: data.data.meta.pagination.total\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeSubmissionComment = (payload, opts) => (dispatch) => {\n    return SubmissionService.storeSubmissionComment(payload, opts).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_SUBMISSION_COMMENT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const destroySubmissionComment = (id) => (dispatch) => {\n    return SubmissionService.deleteSubmissionComment(id).then((data) => {\n        dispatch({\n            type: \"DELETE_SUBMISSION_COMMENT\"\n        })\n    }, (error) => {\n      console.log(error)\n    })\n}\n\nexport const destroySubmissionAttachment = (id) => (dispatch) => {\n    return SubmissionService.deleteSubmissionAttachment(id).then((data) => {\n        dispatch({\n            type: \"DELETE_SUBMISSION_ATTACHMENT\"\n        })\n    }, (error) => {\n      console.log(error)\n    })\n}\n\n\n\nexport const getSubmissionAttachment = (opts) => (dispatch) => {\n    return SubmissionService.getSubmissionAttachment(opts).then(\n        (data) => {\n            \n            dispatch({\n                type: \"GET_SUBMISSION_ATTACHMENT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included,\n                    // total: data.data.meta.pagination.total\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeSubmissionAttachment = (payload, opts) => (dispatch) => {\n    return SubmissionService.storeSubmissionAttachment(payload, opts).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_SUBMISSION_ATTACHMENT\",\n                payload: {\n                    data: data.data.data,\n                    include: data.data.included\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}"]},"metadata":{},"sourceType":"module"}