{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arifin/Documents/semanggi/semanggi-bo/src/pages/customer/activation.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport { Card, Col, Modal, Row, Form, Button } from \"react-bootstrap\";\nimport { getCompanies as _getCompanies, toggleStatusCompany as _toggleStatusCompany } from \"../../redux/actions/company\";\nimport { connect } from \"react-redux\";\nimport Layout, { addNotification, handleError, showLoadingSpinner, hideLoadingSpinner } from \"../../components/Layout\";\nimport DataTable2 from \"../../components/DataTable2\";\nimport Switch from \"react-switch\";\nimport NumberFormat from \"react-number-format\";\n\nvar SetBillingForm = function SetBillingForm(_ref) {\n  var formData = _ref.formData,\n      handleInput = _ref.handleInput;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        column: true,\n        sm: \"4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"13px\"\n          },\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"8\",\n        children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n          required: true,\n          className: \"form-control\",\n          prefix: \"Rp\",\n          value: formData.amount,\n          onValueChange: handleInput(\"amount\"),\n          thousandSeparator: \".\",\n          decimalSeparator: \",\",\n          allowNegative: false,\n          isAllowed: function isAllowed(values) {\n            var floatValue = values.floatValue;\n            return floatValue > 0;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = SetBillingForm;\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(_props) {\n    var _this2;\n\n    _classCallCheck(this, Index);\n\n    _this2 = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this2), \"columns\", [{\n      Header: \"Company Name\",\n      accessor: \"attributes.business_name\"\n    }, {\n      Header: \"Email\",\n      accessor: \"attributes.email\"\n    }, {\n      Header: \"Status\",\n      accessor: \"attributes.activated\",\n      Cell: function Cell(props) {\n        var activated = props.cell.row.original.attributes.email_verified_at ? true : false;\n        return /*#__PURE__*/_jsxDEV(Switch, {\n          checked: activated,\n          onChange: _this2.handleChange(props.cell.row.original),\n          offColor: \"#c6c5c5\",\n          onColor: \"#86d4b3\",\n          onHandleColor: \"#0DAA66\",\n          offHandleColor: \"#F1F1F1\",\n          handleDiameter: 30,\n          uncheckedIcon: false,\n          checkedIcon: false,\n          boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n          activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n          height: 20,\n          width: 48,\n          className: \"react-switch\",\n          id: \"material-switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _assertThisInitialized(_this2));\n      }\n    }]);\n\n    _defineProperty(_assertThisInitialized(_this2), \"closeEditModal\", function () {\n      _this2.setState({\n        editModalVisible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"closeConfirmationModal\", function () {\n      _this2.setState({\n        confirmationModalVisible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleChange\", function (row) {\n      return function (e) {\n        var _row$attributes = row.attributes,\n            id = _row$attributes.id,\n            business_name = _row$attributes.business_name,\n            user_enterprise = _row$attributes.user_enterprise,\n            email_verified_at = _row$attributes.email_verified_at;\n\n        if (!email_verified_at) {\n          _this2.setState({\n            formData: _objectSpread(_objectSpread({}, _this2.state.formData), {}, {\n              id: id,\n              business_name: business_name,\n              activated: !email_verified_at ? true : false\n            }),\n            editModalVisible: true\n          });\n        } else {\n          _this2.setState({\n            formData: _objectSpread(_objectSpread({}, _this2.state.formData), {}, {\n              id: id,\n              business_name: business_name,\n              activated: !email_verified_at ? true : false\n            }),\n            confirmationModalVisible: true\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleInput\", function (key) {\n      return function (e) {\n        _this2.setState({\n          formData: _objectSpread(_objectSpread({}, _this2.state.formData), {}, _defineProperty({}, key, e.floatValue))\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleSubmitEditCompany\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var _this2$state, formData, getCompaniesOpts, textNotification;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (e) e.preventDefault();\n                _this2$state = _this2.state, formData = _this2$state.formData, getCompaniesOpts = _this2$state.getCompaniesOpts;\n                showLoadingSpinner();\n                _context.prev = 3;\n\n                if (!(formData.activated && formData.amount < 10000)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw {\n                  message: \"Amount cannot be less than 10.000\"\n                };\n\n              case 6:\n                _context.next = 8;\n                return _this2.props.toggleStatusCompany(formData.id, formData);\n\n              case 8:\n                _context.next = 10;\n                return _this2.props.getCompanies(getCompaniesOpts);\n\n              case 10:\n                textNotification = formData.activated ? 'Activate' : 'Deactivate';\n                addNotification({\n                  level: \"success\",\n                  message: \"\".concat(textNotification, \" company \").concat(formData.business_name, \" successfully\")\n                });\n\n                _this2.setState({\n                  editModalVisible: false,\n                  confirmationModalVisible: false\n                });\n\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](3);\n                handleError(_context.t0);\n\n              case 18:\n                hideLoadingSpinner();\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _this2.state = {\n      checked: false,\n      formData: {\n        amount: 0\n      },\n      getCompaniesOpts: {\n        params: {\n          \"page[limit]\": 100,\n          include: \"company\"\n        }\n      },\n      editModalVisible: false,\n      confirmationModalVisible: false\n    };\n    return _this2;\n  }\n\n  _createClass(Index, [{\n    key: \"editData\",\n    value: function () {\n      var _editData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data, index) {\n        var items;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                items = _toConsumableArray(this.state.data);\n                data.status == \"Active\" ? data.status = \"Inactive\" : data.status = \"Active\";\n                items[index] = data;\n                this.setState({\n                  data: items\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function editData(_x2, _x3) {\n        return _editData.apply(this, arguments);\n      }\n\n      return editData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.getUserCompany({\n      //   params: {\n      //     \"page[limit]\": 100,\n      //     include: \"company\",\n      //   },\n      // });\n      var getCompaniesOpts = this.state.getCompaniesOpts;\n      this.props.getCompanies(getCompaniesOpts);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var formData = this.state.formData;\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        title: \"Activation\",\n        classname: \"dashboard theme-light\",\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.editModalVisible,\n          onHide: this.closeEditModal,\n          dialogClassName: \"modal-90w\",\n          \"aria-labelledby\": \"example-custom-modal-styling-title\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            style: {\n              border: \"none\",\n              paddingLeft: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              id: \"example-custom-modal-styling-title\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Set Billing Invoice Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            style: {\n              padding: \"20px 30px 20px 30px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SetBillingForm, {\n              handleInput: this.handleInput,\n              formData: this.state.formData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            style: {\n              border: \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-secondary-semanggi\",\n              onClick: this.closeEditModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-success-semanggi\",\n              onClick: this.handleSubmitEditCompany,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.confirmationModalVisible,\n          onHide: this.closeConfirmationModal,\n          dialogClassName: \"modal-90w\",\n          \"aria-labelledby\": \"example-custom-modal-styling-title\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            style: {\n              border: \"none\",\n              paddingLeft: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              id: \"example-custom-modal-styling-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Confirmation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            style: {\n              padding: \"20px 30px 20px 30px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure you want to deactivate the company\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: formData.business_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 15\n              }, this), \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            style: {\n              border: \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-secondary-semanggi\",\n              onClick: this.closeConfirmationModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-success-semanggi\",\n              onClick: this.handleSubmitEditCompany,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 12,\n            md: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                backgroundColor: \"white\",\n                borderRadius: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(DataTable2, {\n                    data: this.props.data,\n                    columns: this.columns,\n                    showGlobalFilter: true,\n                    totalData: this.props.total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$company = state.company,\n      companies = _state$company.companies,\n      include = _state$company.include,\n      total = _state$company.total;\n  var newCompanies = companies.filter(function (user) {\n    if (user[\"attributes\"][\"user_enterprise\"] !== null) {\n      return user;\n    }\n  });\n  return {\n    data: newCompanies,\n    total: total\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCompanies: function getCompanies(opts) {\n      return dispatch(_getCompanies(opts));\n    },\n    toggleStatusCompany: function toggleStatusCompany(id, payload) {\n      return dispatch(_toggleStatusCompany(id, payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"SetBillingForm\");","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/pages/customer/activation.js"],"names":["React","Card","Col","Modal","Row","Form","Button","getCompanies","toggleStatusCompany","connect","Layout","addNotification","handleError","showLoadingSpinner","hideLoadingSpinner","DataTable2","Switch","NumberFormat","SetBillingForm","formData","handleInput","fontSize","amount","values","floatValue","Index","props","Header","accessor","Cell","activated","cell","row","original","attributes","email_verified_at","handleChange","setState","editModalVisible","confirmationModalVisible","e","id","business_name","user_enterprise","state","key","preventDefault","getCompaniesOpts","message","textNotification","level","checked","params","include","data","index","items","status","closeEditModal","border","paddingLeft","padding","handleSubmitEditCompany","closeConfirmationModal","backgroundColor","borderRadius","columns","total","Component","mapStateToProps","company","companies","newCompanies","filter","user","mapDispatchToProps","dispatch","opts","payload"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Card, Col, Modal, Row, Form, Button } from \"react-bootstrap\";\nimport {\n  getCompanies,\n  toggleStatusCompany,\n} from \"../../redux/actions/company\";\nimport { connect } from \"react-redux\";\nimport Layout, {\n  addNotification,\n  handleError,\n  showLoadingSpinner,\n  hideLoadingSpinner,\n} from \"../../components/Layout\";\nimport DataTable2 from \"../../components/DataTable2\";\nimport Switch from \"react-switch\";\nimport NumberFormat from \"react-number-format\";\n\nconst SetBillingForm = ({ formData, handleInput }) => (\n  <Form>\n    <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n      <Form.Label column sm=\"4\">\n        <span style={{ fontSize: \"13px\" }}>Amount</span>\n      </Form.Label>\n      <Col sm=\"8\">\n        <NumberFormat\n          required\n          className=\"form-control\"\n          prefix=\"Rp\"\n          value={formData.amount}\n          onValueChange={handleInput(\"amount\")}\n          thousandSeparator={\".\"}\n          decimalSeparator=\",\"\n          allowNegative={false}\n          isAllowed={(values) => {\n            const { floatValue } = values;\n            return floatValue > 0;\n          }}\n        />\n      </Col>\n    </Form.Group>\n  </Form>\n);\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false,\n      formData: {\n        amount: 0,\n      },\n      getCompaniesOpts: {\n        params: {\n          \"page[limit]\": 100,\n          include: \"company\",\n        },\n      },\n      editModalVisible: false,\n      confirmationModalVisible: false,\n    };\n  }\n\n  columns = [\n    {\n      Header: \"Company Name\",\n      accessor: \"attributes.business_name\",\n    },\n    {\n      Header: \"Email\",\n      accessor: \"attributes.email\",\n    },\n    {\n      Header: \"Status\",\n      accessor: \"attributes.activated\",\n      Cell: (props) => {\n        const activated =\n          props.cell.row.original.attributes.email_verified_at ? true : false;\n        return (\n          <Switch\n            checked={activated}\n            onChange={this.handleChange(props.cell.row.original)}\n            offColor=\"#c6c5c5\"\n            onColor=\"#86d4b3\"\n            onHandleColor=\"#0DAA66\"\n            offHandleColor=\"#F1F1F1\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            className=\"react-switch\"\n            id=\"material-switch\"\n          />\n        );\n      },\n    },\n  ];\n\n  async editData(data, index) {\n    let items = [...this.state.data];\n    data.status == \"Active\"\n      ? (data.status = \"Inactive\")\n      : (data.status = \"Active\");\n    items[index] = data;\n    this.setState({\n      data: items,\n    });\n  }\n\n  componentDidMount() {\n    // this.props.getUserCompany({\n    //   params: {\n    //     \"page[limit]\": 100,\n    //     include: \"company\",\n    //   },\n    // });\n    const { getCompaniesOpts } = this.state;\n    this.props.getCompanies(getCompaniesOpts);\n  }\n\n  closeEditModal = () => {\n    this.setState({\n      editModalVisible: false,\n    });\n  };\n\n  closeConfirmationModal = () => {\n    this.setState({\n      confirmationModalVisible: false,\n    });\n  };\n\n  handleChange = (row) => (e) => {\n    const { id, business_name, user_enterprise, email_verified_at } = row.attributes;\n    if (!email_verified_at) {\n      this.setState({\n        formData: {\n          ...this.state.formData,\n          id,\n          business_name,\n          activated: !email_verified_at ? true:false,\n        },\n        editModalVisible: true,\n      });\n    } else {\n      this.setState({\n        formData: {\n          ...this.state.formData,\n          id,\n          business_name,\n          activated: !email_verified_at ? true:false,\n        },\n        confirmationModalVisible: true,\n      });\n    }\n  };\n\n  handleInput = (key) => (e) => {\n    this.setState({\n      formData: {\n        ...this.state.formData,\n        [key]: e.floatValue,\n      },\n    });\n  };\n\n  handleSubmitEditCompany = async (e) => {\n    if (e) e.preventDefault();\n    const { formData, getCompaniesOpts } = this.state;\n    showLoadingSpinner();\n    try {      \n      if (formData.activated && formData.amount < 10000) {\n        throw {\n          message: \"Amount cannot be less than 10.000\",\n        };\n      }\n      await this.props.toggleStatusCompany(formData.id, formData);\n      await this.props.getCompanies(getCompaniesOpts);\n      let textNotification = formData.activated ? 'Activate' : 'Deactivate';\n      addNotification({\n        level: \"success\",\n        message: `${textNotification} company ${formData.business_name} successfully`,\n      });\n      this.setState({\n        editModalVisible: false,\n        confirmationModalVisible: false,\n      });\n    } catch (e) {\n      handleError(e);\n    }\n\n    hideLoadingSpinner();\n  };\n\n  render() {\n    const { formData } = this.state;\n    return (\n      <Layout title=\"Activation\" classname=\"dashboard theme-light\">\n        {/* Modal Edit Billing Invoice */}\n        <Modal\n          show={this.state.editModalVisible}\n          onHide={this.closeEditModal}\n          dialogClassName=\"modal-90w\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n          centered\n        >\n          <Modal.Header\n            closeButton\n            style={{ border: \"none\", paddingLeft: \"20px\" }}\n          >\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n              <small>Set Billing Invoice Monthly</small>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ padding: \"20px 30px 20px 30px\" }}>\n            <SetBillingForm\n              handleInput={this.handleInput}\n              formData={this.state.formData}\n            />\n          </Modal.Body>\n          <Modal.Footer style={{ border: \"none\" }}>\n            <Button\n              className=\"btn-secondary-semanggi\"\n              onClick={this.closeEditModal}\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"btn-success-semanggi\"\n              onClick={this.handleSubmitEditCompany}\n            >\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {/* Modal Confirmation */}\n        <Modal\n          show={this.state.confirmationModalVisible}\n          onHide={this.closeConfirmationModal}\n          dialogClassName=\"modal-90w\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n          centered\n        >\n          <Modal.Header\n            closeButton\n            style={{ border: \"none\", paddingLeft: \"20px\" }}\n          >\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n              <h3>Confirmation</h3>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ padding: \"20px 30px 20px 30px\" }}>\n            <p>\n              Are you sure you want to deactivate the company{\" \"}\n              <b>{formData.business_name}</b>?\n            </p>\n          </Modal.Body>\n          <Modal.Footer style={{ border: \"none\" }}>\n            <Button\n              className=\"btn-secondary-semanggi\"\n              onClick={this.closeConfirmationModal}\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"btn-success-semanggi\"\n              onClick={this.handleSubmitEditCompany}\n            >\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Row>\n          <Col lg={12} md={12} sm={12}>\n            <Card style={{ backgroundColor: \"white\", borderRadius: \"10px\" }}>\n              <Row>\n                <Col xs={12}>\n                  <DataTable2\n                    data={this.props.data}\n                    columns={this.columns}\n                    showGlobalFilter={true}\n                    totalData={this.props.total}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { companies, include, total } = state.company;\n  let newCompanies = companies.filter((user) => {\n    if (user[\"attributes\"][\"user_enterprise\"] !== null) {\n      return user;\n    }\n  });\n  return {\n    data: newCompanies,\n    total,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCompanies: (opts) => dispatch(getCompanies(opts)),\n    toggleStatusCompany: (id, payload) =>\n      dispatch(toggleStatusCompany(id, payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n"]},"metadata":{},"sourceType":"module"}