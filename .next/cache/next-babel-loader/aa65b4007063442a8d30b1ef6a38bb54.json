{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/arifin/Documents/pretest/dashboard/src/pages/payments/detail/[id].js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Button, Row, Col, Card, Form, InputGroup, FormControl, Modal, Tabs, Tab, Alert, Table } from 'react-bootstrap';\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport Layout from '../../../components/Layout';\nimport { connect } from 'react-redux';\nimport Router from \"next/router\";\nimport { toast } from 'react-toastify';\nimport { alertSuccess, alertDanger } from '../../../components/alert';\nimport { getUser } from \"../../../redux/actions/user\";\nimport { updatePayment, showPayment } from \"../../../redux/actions/payment\";\n\nclass index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getTotalPercents\", data => {\n      let total = 0;\n      data.forEach(item => {\n        total += item.percent;\n      });\n      this.state.total_percent = total;\n      return parseFloat(total);\n    });\n\n    _defineProperty(this, \"addEmployee\", async () => {\n      this.setState({\n        modalProduct: true\n      });\n    });\n\n    _defineProperty(this, \"searchItem\", async () => {\n      this.getData(1, this.state.num);\n    });\n\n    _defineProperty(this, \"getData\", (page, size = this.state.num) => {\n      let payload = {\n        page: page,\n        limit: size\n      };\n      this.props.getUser(payload).then(() => {\n        this.setState({\n          data: this.props.dataUser\n        });\n      });\n    });\n\n    _defineProperty(this, \"handlePageChange\", page => {\n      this.getData(page);\n    });\n\n    _defineProperty(this, \"handlePerRowsChange\", async (newPerPage, page) => {\n      this.getData(page, newPerPage);\n    });\n\n    _defineProperty(this, \"savePayment\", e => {\n      if (this.state.total_percent > 0 && (this.state.total_percent > 100 || this.state.total_percent < 100)) {\n        toast.error(\"Percent must be in 100 %\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000\n        });\n      }\n\n      let items = [];\n      this.state.keranjang.forEach(item => {\n        items.push({\n          user_id: item.user.id,\n          percentage: item.percent,\n          wage_price: item.wage_price\n        });\n      });\n      let payload = {\n        name: this.state.name,\n        bonus: this.state.bonus,\n        wages: items\n      };\n      this.props.updatePayment(Router.router.query.id, payload).then(() => {\n        Router.replace(\"/payments\");\n        alertSuccess('Payment updated');\n      });\n    });\n\n    _defineProperty(this, \"submitCheckOut\", () => {\n      this.savePayment();\n    });\n\n    this.state = {\n      modalProduct: false,\n      columns: [{\n        name: 'ID',\n        selector: (row, index) => index + 1 + (this.state.page - 1) * this.state.num + '.',\n        sortable: true,\n        width: '10%'\n      }, {\n        name: 'Name',\n        selector: 'name',\n        sortable: true\n      }, {\n        name: 'Actions',\n        selector: (row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'green'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              color: '#FFF',\n              borderRadius: '50%',\n              background: 'green',\n              padding: '2px'\n            },\n            className: \"fa fa-plus\",\n            onClick: () => {\n              let keranjang = this.state.keranjang; // row.attributes.amount = Number(row.attributes.amount)\n\n              row.percent = 0;\n              row.wage_price = 0;\n              keranjang.push(row);\n              this.setState({\n                keranjang: keranjang\n              });\n              let delete_data = [...this.state.data];\n              delete_data.splice(index, 1);\n              this.setState({\n                data: delete_data\n              });\n              alertSuccess('items added!');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 79\n          }, this), \" Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 48\n        }, this),\n        width: '10%'\n      }],\n      data: [],\n      dataDetail: null,\n      keranjang: [],\n      total: 0,\n      bonus: '',\n      name: null,\n      date: '',\n      page: 1,\n      num: 5,\n      total_items: 0,\n      dataSearch: null,\n      modalShow: false,\n      modalOrder: false,\n      wages: [],\n      includeProduct: null,\n      search_item: '',\n      total_percent: 0\n    };\n  }\n\n  async componentDidMount() {\n    this.props.showPayment(Router.router.query.id, {}).then(() => {\n      let total_before = 0;\n      this.props.data.data.wage.forEach(item => {\n        item.percent = item.percentage;\n        item.wage_price = item.wage_price;\n        item.user.name = item.user.name;\n        total_before += parseFloat(item.percentage);\n      });\n      this.setState({\n        keranjang: this.props.data.data.wage,\n        name: this.props.data.data.name,\n        bonus: this.props.data.data.bonus,\n        date: this.props.data.data.created_at,\n        total_percent: total_before\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Edit Payment\",\n      classname: \"dashboard theme-light\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          backgroundColor: 'white',\n          borderRadius: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            className: \"m-5\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Row,\n                  controlId: \"formPlaintextPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    column: true,\n                    sm: \"3\",\n                    children: \"Transaction Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"9\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Transaction Name\",\n                      defaultValue: this.state.name,\n                      readOnly: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Row,\n                  controlId: \"formPlaintextPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    column: true,\n                    sm: \"3\",\n                    children: \"Bonus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: \"9\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      defaultValue: this.state.bonus,\n                      readOnly: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"lg\",\n            className: \"mb-5 table-size\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"pl-5\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Emplpyee Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Percent (%)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Price (IDR)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"pr-5\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.keranjang.map((r, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"pl-5\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: r.user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: r.percentage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: r.wage_price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              textAlign: 'right'\n            },\n            className: \"mt-5 mr-5\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"TOTAL PERCENT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Rp \", this.getTotalPercents(this.state.keranjang), \" %\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    dataUser,\n    total\n  } = state.user;\n  const {\n    data\n  } = state.payment;\n  return {\n    dataUser,\n    total,\n    data\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUser: opts => dispatch(getUser(opts)),\n    updatePayment: (id, payload, opts) => dispatch(updatePayment(id, payload, opts)),\n    showPayment: (id, payload, opts) => dispatch(showPayment(id, payload, opts))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/pages/payments/detail/[id].js"],"names":["React","Button","Row","Col","Card","Form","InputGroup","FormControl","Modal","Tabs","Tab","Alert","Table","DataTable","createTheme","Layout","connect","Router","toast","alertSuccess","alertDanger","getUser","updatePayment","showPayment","index","Component","constructor","props","data","total","forEach","item","percent","state","total_percent","parseFloat","setState","modalProduct","getData","num","page","size","payload","limit","then","dataUser","newPerPage","e","error","position","POSITION","TOP_RIGHT","autoClose","items","keranjang","push","user_id","user","id","percentage","wage_price","name","bonus","wages","router","query","replace","savePayment","columns","selector","row","sortable","width","color","borderRadius","background","padding","delete_data","splice","dataDetail","date","total_items","dataSearch","modalShow","modalOrder","includeProduct","search_item","componentDidMount","total_before","wage","created_at","render","backgroundColor","map","r","textAlign","getTotalPercents","mapStateToProps","payment","mapDispatchToProps","dispatch","opts"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Button, Row, Col, Card, Form, InputGroup, FormControl, Modal, Tabs, Tab, Alert, Table} from 'react-bootstrap';\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport Layout from '../../../components/Layout';\nimport {connect} from 'react-redux'\nimport Router from \"next/router\";\nimport {toast} from 'react-toastify'\nimport {alertSuccess, alertDanger} from '../../../components/alert'\nimport { getUser } from \"../../../redux/actions/user\";\nimport { updatePayment, showPayment } from \"../../../redux/actions/payment\";\n\nclass index extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            modalProduct: false,\n            columns: [\n                {\n                    name: 'ID',\n                    selector: (row, index) =>  ((index+1) + (this.state.page - 1) * this.state.num) + '.',\n                    sortable: true,\n                    width: '10%'\n                },\n                {\n                    name: 'Name',\n                    selector: 'name',\n                    sortable: true,\n                },\n                {\n                    name: 'Actions',\n                    selector: (row, index) => (<div style={{ color:'green' }}><i style={{ color:'#FFF', borderRadius:'50%', background:'green', padding:'2px' }} className=\"fa fa-plus\" onClick={ () => {\n                        let keranjang = this.state.keranjang\n                        // row.attributes.amount = Number(row.attributes.amount)\n                        row.percent = 0\n                        row.wage_price = 0       \n                        keranjang.push(row)\n                        this.setState({\n                            keranjang: keranjang\n                        })\n                        let delete_data = [...this.state.data]\n                        delete_data.splice(index, 1)\n                        this.setState({\n                            data: delete_data\n                        })\n                        alertSuccess('items added!')\n                        \n                    }}></i> Add</div>),\n                    width: '10%'\n                }\n            ],\n            data: [],\n            dataDetail: null,\n            keranjang: [],\n            total: 0,\n            bonus: '',\n            name: null, \n            date:'',\n            page: 1,\n            num: 5,\n            total_items: 0,\n            dataSearch: null,\n            modalShow: false,\n            modalOrder: false,\n            wages:[],\n            includeProduct: null,\n            search_item: '',\n            total_percent: 0\n\n        }\n    }\n\n    getTotalPercents = (data) => {\n        let total = 0;\n        data.forEach(item => {\n          total += item.percent;\n        });\n\n        this.state.total_percent = total\n        return parseFloat(total);\n    };\n\n    addEmployee = async () => {\n        this.setState({ modalProduct:true })\n    }\n    searchItem = async () => {\n        this.getData(1, this.state.num)\n    }\n\n    getData = (page, size = this.state.num) => {\n        let payload = {\n            page: page,\n            limit: size,\n        }\n        this.props.getUser(payload).then(() => {\n            this.setState({\n                data: this.props.dataUser,\n            })\n        })\n    }\n    handlePageChange = page => {\n        this.getData(page)\n    }\n\n    handlePerRowsChange = async (newPerPage, page) => {\n        this.getData(page, newPerPage);\n    };\n\n    async componentDidMount() {\n        this.props.showPayment(Router.router.query.id, {}).then(() => {\n            let total_before = 0\n            this.props.data.data.wage.forEach(item => {\n                item.percent = item.percentage\n                item.wage_price = item.wage_price\n                item.user.name = item.user.name\n                total_before += parseFloat(item.percentage) \n            });\n            this.setState({\n                keranjang: this.props.data.data.wage,\n                name: this.props.data.data.name,\n                bonus: this.props.data.data.bonus,\n                date: this.props.data.data.created_at,\n                total_percent: total_before\n            })\n        })\n    }\n\n    savePayment = (e) => {\n        if(this.state.total_percent > 0 && (this.state.total_percent > 100 || this.state.total_percent < 100)){\n            toast.error(\"Percent must be in 100 %\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 3000\n            })\n        }\n        let items = []\n        this.state.keranjang.forEach(item => {\n            items.push({\n                user_id: item.user.id,\n                percentage: item.percent,\n                wage_price: item.wage_price\n            })\n        });\n        \n        let payload = {\n            name: this.state.name,\n            bonus:this.state.bonus,\n            wages: items\n        }\n        \n        this.props.updatePayment(Router.router.query.id, payload).then(() => {\n            Router.replace(\"/payments\");\n            alertSuccess('Payment updated')\n        })\n    }\n\n    submitCheckOut = () => {\n        this.savePayment()\n    }\n  \n    render () {\n  \n      return (\n        \n        <Layout title=\"Edit Payment\" classname=\"dashboard theme-light\">\n            <Card style={{ backgroundColor: 'white', borderRadius:'10px' }} >\n                <div className=\"mb-5\">\n                    <Form className=\"m-5\">\n                        <Row>\n                            <Col xs={6}>\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                    <Form.Label column sm=\"3\">\n                                        Transaction Name\n                                    </Form.Label>\n                                    <Col sm=\"9\">\n                                        <Form.Control type=\"text\" placeholder=\"Transaction Name\" defaultValue={this.state.name} readOnly />\n                                    </Col>\n                                </Form.Group>\n\n                            </Col>\n                            <Col xs={6}>\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                    <Form.Label column sm=\"3\">\n                                    Bonus\n                                    </Form.Label>\n                                    <Col sm=\"9\">\n                                        <Form.Control type=\"text\" defaultValue={this.state.bonus} readOnly/>\n                                    </Col>\n                                    \n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Form>\n                    <Table size=\"lg\" className=\"mb-5 table-size\" responsive>\n                        <thead>\n                            <tr>\n                                <th className=\"pl-5\">No</th>\n                                <th>Emplpyee Name</th>\n                                <th>Percent (%)</th>\n                                <th>Price (IDR)</th>\n                                <th className=\"pr-5\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.keranjang.map((r, index) => (\n                                <tr key={index}>\n                                    <td className=\"pl-5\">{index+1}</td>\n                                    <td>\n                                        {r.user.name}\n                                    </td>\n\n                                    <td>\n                                        {r.percentage}\n                                    </td>\n                                    <td>{ r.wage_price }</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n\n                    <Row style={{ textAlign:'right' }} className=\"mt-5 mr-5\">\n                        <Col xs={10}>\n                            <strong>TOTAL PERCENT</strong> \n                        </Col>\n\n                        <Col xs={2}>\n                            <strong>Rp {this.getTotalPercents(this.state.keranjang)} %</strong>\n                        </Col>\n                    </Row>\n                </div>\n            </Card>\n        </Layout>\n      );\n    }\n  }\n  function mapStateToProps ( state ) {\n    const { dataUser, total } = state.user;\n    const { data } = state.payment;\n    return {\n        dataUser,\n        total,\n        data,\n    };\n}\n\nfunction mapDispatchToProps (dispatch) {\n    return {\n        getUser: (opts) => dispatch(getUser(opts)),\n        updatePayment: (id, payload, opts) => dispatch(updatePayment(id, payload, opts)),\n        showPayment: (id, payload, opts) => dispatch(showPayment(id, payload, opts)),\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(index);\n  "]},"metadata":{},"sourceType":"module"}