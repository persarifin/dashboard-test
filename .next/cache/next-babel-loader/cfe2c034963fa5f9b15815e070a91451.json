{"ast":null,"code":"import BillingInvoicesService from \"../../service/billing_invoices\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\nexport const getBillingInvoices = opts => dispatch => {\n  return BillingInvoicesService.getBillingInvoices(opts).then(data => {\n    dispatch({\n      type: \"GET_BILLING_INVOICES\",\n      payload: {\n        data: data.data.data,\n        included: data.data.included,\n        total: data.data.meta.pagination.total\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const updateBillingInvoice = (id, payload, opts) => dispatch => {\n  return BillingInvoicesService.updateBillingInvoice(id, payload, opts).then(data => {\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const updateBilling = (id, payload, opts) => dispatch => {\n  return BillingInvoicesService.updateBilling(id, payload, opts).then(data => {\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    hideLoadingSpinner();\n    return Promise.reject();\n  });\n};\nexport const setSelectedCompanyId = company => dispatch => {\n  return dispatch({\n    type: \"SET_SELECTED_COMPANY_ID\",\n    payload: {\n      selectedCompany: company\n    }\n  });\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/billing_invoices.js"],"names":["BillingInvoicesService","hideLoadingSpinner","getBillingInvoices","opts","dispatch","then","data","type","payload","included","total","meta","pagination","Promise","resolve","error","reject","updateBillingInvoice","id","updateBilling","setSelectedCompanyId","company","selectedCompany"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,gCAAnC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAWC,QAAD,IAAc;AACxD,SAAOJ,sBAAsB,CAACE,kBAAvB,CAA0CC,IAA1C,EAAgDE,IAAhD,CACJC,IAAD,IAAU;AACRF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,sBADC;AAEPC,MAAAA,OAAO,EAAE;AACPF,QAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IADT;AAEPG,QAAAA,QAAQ,EAAEH,IAAI,CAACA,IAAL,CAAUG,QAFb;AAGPC,QAAAA,KAAK,EAAEJ,IAAI,CAACA,IAAL,CAAUK,IAAV,CAAeC,UAAf,CAA0BF;AAH1B;AAFF,KAAD,CAAR;AAQA,WAAOG,OAAO,CAACC,OAAR,EAAP;AACD,GAXI,EAYJC,KAAD,IAAW;AACTX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGAN,IAAAA,kBAAkB;AAClB,WAAOY,OAAO,CAACG,MAAR,EAAP;AACD,GAlBI,CAAP;AAoBD,CArBM;AAuBP,OAAO,MAAMC,oBAAoB,GAAG,CAACC,EAAD,EAAKV,OAAL,EAAcL,IAAd,KAAwBC,QAAD,IAAc;AACvE,SAAOJ,sBAAsB,CAACiB,oBAAvB,CAA4CC,EAA5C,EAAgDV,OAAhD,EAAyDL,IAAzD,EAA+DE,IAA/D,CACJC,IAAD,IAAU;AACR,WAAOO,OAAO,CAACC,OAAR,EAAP;AACD,GAHI,EAIJC,KAAD,IAAW;AACTX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGAN,IAAAA,kBAAkB;AAClB,WAAOY,OAAO,CAACG,MAAR,EAAP;AACD,GAVI,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMG,aAAa,GAAG,CAACD,EAAD,EAAKV,OAAL,EAAcL,IAAd,KAAwBC,QAAD,IAAc;AAChE,SAAOJ,sBAAsB,CAACmB,aAAvB,CAAqCD,EAArC,EAAyCV,OAAzC,EAAkDL,IAAlD,EAAwDE,IAAxD,CACJC,IAAD,IAAU;AACR,WAAOO,OAAO,CAACC,OAAR,EAAP;AACD,GAHI,EAIJC,KAAD,IAAW;AACTX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGAN,IAAAA,kBAAkB;AAClB,WAAOY,OAAO,CAACG,MAAR,EAAP;AACD,GAVI,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMI,oBAAoB,GAAGC,OAAO,IAAIjB,QAAQ,IAAI;AACzD,SAAOA,QAAQ,CAAC;AACdG,IAAAA,IAAI,EAAE,yBADQ;AAEdC,IAAAA,OAAO,EAAE;AACPc,MAAAA,eAAe,EAAED;AADV;AAFK,GAAD,CAAf;AAMD,CAPM","sourcesContent":["import BillingInvoicesService from \"../../service/billing_invoices\";\nimport { hideLoadingSpinner } from \"../../components/Layout\";\n\nexport const getBillingInvoices = (opts) => (dispatch) => {\n  return BillingInvoicesService.getBillingInvoices(opts).then(\n    (data) => {\n      dispatch({\n        type: \"GET_BILLING_INVOICES\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included,\n          total: data.data.meta.pagination.total,\n        },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateBillingInvoice = (id, payload, opts) => (dispatch) => {\n  return BillingInvoicesService.updateBillingInvoice(id, payload, opts).then(\n    (data) => {\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateBilling = (id, payload, opts) => (dispatch) => {\n  return BillingInvoicesService.updateBilling(id, payload, opts).then(\n    (data) => {\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\nexport const setSelectedCompanyId = company => dispatch => {\n  return dispatch({\n    type: \"SET_SELECTED_COMPANY_ID\",\n    payload: {\n      selectedCompany: company\n    }\n  });\n} "]},"metadata":{},"sourceType":"module"}