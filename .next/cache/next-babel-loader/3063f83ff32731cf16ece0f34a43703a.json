{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  data: [],\n  included: [],\n  meta: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"GET_ROLE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload.data,\n        included: payload.included,\n        meta: payload.meta\n      });\n\n    case \"STORE_ROLE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload.data\n      });\n\n    case \"UPDATE_ROLE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload.data\n      });\n\n    case \"FAIL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: []\n      });\n\n    case \"DELETE_ROLE\":\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/redux/reducers/role.js"],"names":["initialState","data","included","meta","state","action","type","payload"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAK,UAAL;AACE,6CACKF,KADL;AAEEH,QAAAA,IAAI,EAAEM,OAAO,CAACN,IAFhB;AAGEC,QAAAA,QAAQ,EAAEK,OAAO,CAACL,QAHpB;AAIEC,QAAAA,IAAI,EAAEI,OAAO,CAACJ;AAJhB;;AAMF,SAAK,YAAL;AACE,6CACKC,KADL;AAEEH,QAAAA,IAAI,EAAEM,OAAO,CAACN;AAFhB;;AAKF,SAAK,aAAL;AACE,6CACKG,KADL;AAEEH,QAAAA,IAAI,EAAEM,OAAO,CAACN;AAFhB;;AAKF,SAAK,MAAL;AACE,6CACKG,KADL;AAEEH,QAAAA,IAAI,EAAE;AAFR;;AAIF,SAAK,aAAL;AACE,+BACKG,KADL;;AAGF;AACE,aAAOA,KAAP;AA9BJ;AAgCD","sourcesContent":["const initialState = {\n  data: [],\n  included: [],\n  meta: {}\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case \"GET_ROLE\":\n      return {\n        ...state,\n        data: payload.data,\n        included: payload.included,\n        meta: payload.meta\n      };\n    case \"STORE_ROLE\":\n      return {\n        ...state,\n        data: payload.data,\n      };\n\n    case \"UPDATE_ROLE\":\n      return {\n        ...state,\n        data: payload.data,\n      };\n\n    case \"FAIL\":\n      return {\n        ...state,\n        data: [],\n      };\n    case \"DELETE_ROLE\":\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}