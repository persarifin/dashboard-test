{"ast":null,"code":"import WalletService from '../../service/wallet';\nexport var getWallet = function getWallet(opts) {\n  return function (dispatch) {\n    return WalletService.getWallet(opts).then(function (data) {\n      dispatch({\n        type: \"GET_WALLET\",\n        payload: {\n          data: data.data.data,\n          total: data.data.meta.pagination.total\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var storeWallet = function storeWallet(payload) {\n  return function (dispatch) {\n    return WalletService.storeWallet(payload).then(function (data) {\n      dispatch({\n        type: \"STORE_WALLET\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateWallet = function updateWallet(payload) {\n  return function (dispatch) {\n    return WalletService.updateWallet(payload).then(function (data) {\n      dispatch({\n        type: \"UPDATE_WALLET\",\n        payload: {\n          data: data.data.data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var destroyWallet = function destroyWallet(id) {\n  return function (dispatch) {\n    return WalletService.deleteWallet(id).then(function (data) {\n      dispatch({\n        type: \"DELETE_WALLET\"\n      });\n    }, function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getRekonsil = function getRekonsil(payload) {\n  return function (dispatch) {\n    return WalletService.getRekonsil(payload).then(function (data) {\n      dispatch({\n        type: \"GET_REKONSIL\",\n        payload: {\n          data: data.data.data,\n          total: data.data.meta.pagination.total,\n          included: data.data.included\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var storeRekonsil = function storeRekonsil(payload) {\n  return function (dispatch) {\n    return WalletService.storeRekonsil(payload).then(function (data) {\n      dispatch({\n        type: \"STORE_REKONSIL\",\n        payload: {\n          data: data.data.data,\n          included: data.data.included\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/actions/wallet.js"],"names":["WalletService","getWallet","opts","dispatch","then","data","type","payload","total","meta","pagination","Promise","resolve","error","reject","storeWallet","updateWallet","destroyWallet","id","deleteWallet","console","log","getRekonsil","included","storeRekonsil"],"mappings":"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","sourcesContent":["import WalletService from '../../service/wallet'\n\nexport const getWallet = (opts) => (dispatch) => {\n    return WalletService.getWallet(opts).then(\n        (data) => {\n            dispatch({\n                type: \"GET_WALLET\",\n                payload: {\n                    data: data.data.data,\n                    total: data.data.meta.pagination.total\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeWallet = (payload) => (dispatch) => {\n    return WalletService.storeWallet(payload).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_WALLET\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const updateWallet = (payload) => (dispatch) => {\n    return WalletService.updateWallet(payload).then(\n        (data) => {\n            dispatch({\n                type: \"UPDATE_WALLET\",\n                payload: {\n                    data: data.data.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const destroyWallet = (id) => (dispatch) => {\n    return WalletService.deleteWallet(id).then((data) => {\n        dispatch({\n            type: \"DELETE_WALLET\"\n        })\n    }, (error) => {\n      console.log(error)\n    })\n}\n\nexport const getRekonsil = (payload) => (dispatch) => {\n    return WalletService.getRekonsil(payload).then(\n        (data) => {\n            dispatch({\n                type: \"GET_REKONSIL\",\n                payload: {\n                    data: data.data.data,\n                    total: data.data.meta.pagination.total,\n                    included: data.data.included,\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}\n\nexport const storeRekonsil = (payload) => (dispatch) => {\n    return WalletService.storeRekonsil(payload).then(\n        (data) => {\n            dispatch({\n                type: \"STORE_REKONSIL\",\n                payload: {\n                    data: data.data.data,\n                    included: data.data.included\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch({\n                type: \"FAIL\",\n            });\n        \n            return Promise.reject();\n        }\n    )\n}"]},"metadata":{},"sourceType":"module"}