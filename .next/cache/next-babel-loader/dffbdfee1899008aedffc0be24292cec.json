{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/arifin/Documents/semanggi/semanggi-bo/src/pages/customer/activation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { Card, Col, Modal, Row, Form, Button } from \"react-bootstrap\";\nimport { getCompanies, toggleStatusCompany } from \"../../redux/actions/company\";\nimport { connect } from \"react-redux\";\nimport Layout, { addNotification, handleError, showLoadingSpinner, hideLoadingSpinner } from \"../../components/Layout\";\nimport DataTable2 from \"../../components/DataTable2\";\nimport Switch from \"react-switch\";\nimport NumberFormat from \"react-number-format\";\n\nconst SetBillingForm = ({\n  formData,\n  handleInput\n}) => /*#__PURE__*/_jsxDEV(Form, {\n  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n    as: Row,\n    controlId: \"formPlaintextPassword\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      column: true,\n      sm: \"4\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"13px\"\n        },\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      sm: \"8\",\n      children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n        required: true,\n        className: \"form-control\",\n        prefix: \"Rp\",\n        value: formData.amount,\n        onValueChange: handleInput(\"amount\"),\n        thousandSeparator: \".\",\n        decimalSeparator: \",\",\n        allowNegative: false,\n        isAllowed: values => {\n          const {\n            floatValue\n          } = values;\n          return floatValue > 0;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n\nclass Index extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"columns\", [{\n      Header: \"Company Name\",\n      accessor: \"attributes.business_name\"\n    }, {\n      Header: \"Email\",\n      accessor: \"attributes.email\"\n    }, {\n      Header: \"Status\",\n      accessor: \"attributes.activated\",\n      Cell: props => {\n        const activated = props.cell.row.original.attributes.email_verified_at ? true : false;\n        return /*#__PURE__*/_jsxDEV(Switch, {\n          checked: activated,\n          onChange: this.handleChange(props.cell.row.original),\n          offColor: \"#c6c5c5\",\n          onColor: \"#86d4b3\",\n          onHandleColor: \"#0DAA66\",\n          offHandleColor: \"#F1F1F1\",\n          handleDiameter: 30,\n          uncheckedIcon: false,\n          checkedIcon: false,\n          boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n          activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n          height: 20,\n          width: 48,\n          className: \"react-switch\",\n          id: \"material-switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this);\n      }\n    }]);\n\n    _defineProperty(this, \"closeEditModal\", () => {\n      this.setState({\n        editModalVisible: false\n      });\n    });\n\n    _defineProperty(this, \"closeConfirmationModal\", () => {\n      this.setState({\n        confirmationModalVisible: false\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", row => e => {\n      const {\n        id,\n        business_name,\n        user_enterprise,\n        email_verified_at\n      } = row.attributes;\n\n      if (!email_verified_at) {\n        this.setState({\n          formData: _objectSpread(_objectSpread({}, this.state.formData), {}, {\n            id,\n            business_name,\n            activated: !email_verified_at ? true : false\n          }),\n          editModalVisible: true\n        });\n      } else {\n        this.setState({\n          formData: _objectSpread(_objectSpread({}, this.state.formData), {}, {\n            id,\n            business_name,\n            activated: !email_verified_at ? true : false\n          }),\n          confirmationModalVisible: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleInput\", key => e => {\n      this.setState({\n        formData: _objectSpread(_objectSpread({}, this.state.formData), {}, {\n          [key]: e.floatValue\n        })\n      });\n    });\n\n    _defineProperty(this, \"handleSubmitEditCompany\", async e => {\n      if (e) e.preventDefault();\n      const {\n        formData,\n        getCompaniesOpts\n      } = this.state;\n      showLoadingSpinner();\n\n      try {\n        if (formData.activated && formData.amount < 10000) {\n          throw {\n            message: \"Amount cannot be less than 10.000\"\n          };\n        }\n\n        await this.props.toggleStatusCompany(formData.id, formData);\n        await this.props.getCompanies(getCompaniesOpts);\n        let textNotification = formData.activated ? 'Activate' : 'Deactivate';\n        addNotification({\n          level: \"success\",\n          message: `${textNotification} company ${formData.business_name} successfully`\n        });\n        this.setState({\n          editModalVisible: false,\n          confirmationModalVisible: false\n        });\n      } catch (e) {\n        handleError(e);\n      }\n\n      hideLoadingSpinner();\n    });\n\n    this.state = {\n      checked: false,\n      formData: {\n        amount: 0\n      },\n      getCompaniesOpts: {\n        params: {\n          \"page[limit]\": 100,\n          include: \"company\"\n        }\n      },\n      editModalVisible: false,\n      confirmationModalVisible: false,\n      data: []\n    };\n  }\n\n  async editData(data, index) {\n    let items = [...this.state.data];\n    data.status == \"Active\" ? data.status = \"Inactive\" : data.status = \"Active\";\n    items[index] = data;\n    this.setState({\n      data: items\n    });\n  }\n\n  componentDidMount() {\n    // this.props.getUserCompany({\n    //   params: {\n    //     \"page[limit]\": 100,\n    //     include: \"company\",\n    //   },\n    // });\n    const {\n      getCompaniesOpts\n    } = this.state;\n    this.props.getCompanies(getCompaniesOpts);\n    this.setState({\n      data: this.props.data.filter(user => {\n        return user.attributes.user_enterprise !== null;\n      })\n    });\n  }\n\n  render() {\n    const {\n      formData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Activation\",\n      classname: \"dashboard theme-light\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.editModalVisible,\n        onHide: this.closeEditModal,\n        dialogClassName: \"modal-90w\",\n        \"aria-labelledby\": \"example-custom-modal-styling-title\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          style: {\n            border: \"none\",\n            paddingLeft: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"example-custom-modal-styling-title\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Set Billing Invoice Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          style: {\n            padding: \"20px 30px 20px 30px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(SetBillingForm, {\n            handleInput: this.handleInput,\n            formData: this.state.formData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          style: {\n            border: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-secondary-semanggi\",\n            onClick: this.closeEditModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-success-semanggi\",\n            onClick: this.handleSubmitEditCompany,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.confirmationModalVisible,\n        onHide: this.closeConfirmationModal,\n        dialogClassName: \"modal-90w\",\n        \"aria-labelledby\": \"example-custom-modal-styling-title\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          style: {\n            border: \"none\",\n            paddingLeft: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"example-custom-modal-styling-title\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          style: {\n            padding: \"20px 30px 20px 30px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure you want to deactivate the company\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: formData.business_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          style: {\n            border: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-secondary-semanggi\",\n            onClick: this.closeConfirmationModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-success-semanggi\",\n            onClick: this.handleSubmitEditCompany,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          md: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: \"white\",\n              borderRadius: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DataTable2, {\n                  data: this.props.data,\n                  columns: this.columns,\n                  showGlobalFilter: true,\n                  totalData: this.props.total\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    companies,\n    include,\n    total\n  } = state.company; // let newCompanies = companies.filter((user) => { return user.attributes.user_enterprise !== null});\n  // console.log(newCompanies)\n\n  return {\n    data: companies,\n    total\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCompanies: opts => dispatch(getCompanies(opts)),\n    toggleStatusCompany: (id, payload) => dispatch(toggleStatusCompany(id, payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/pages/customer/activation.js"],"names":["React","Card","Col","Modal","Row","Form","Button","getCompanies","toggleStatusCompany","connect","Layout","addNotification","handleError","showLoadingSpinner","hideLoadingSpinner","DataTable2","Switch","NumberFormat","SetBillingForm","formData","handleInput","fontSize","amount","values","floatValue","Index","Component","constructor","props","Header","accessor","Cell","activated","cell","row","original","attributes","email_verified_at","handleChange","setState","editModalVisible","confirmationModalVisible","e","id","business_name","user_enterprise","state","key","preventDefault","getCompaniesOpts","message","textNotification","level","checked","params","include","data","editData","index","items","status","componentDidMount","filter","user","render","closeEditModal","border","paddingLeft","padding","handleSubmitEditCompany","closeConfirmationModal","backgroundColor","borderRadius","columns","total","mapStateToProps","companies","company","mapDispatchToProps","dispatch","opts","payload"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Card, Col, Modal, Row, Form, Button } from \"react-bootstrap\";\nimport {\n  getCompanies,\n  toggleStatusCompany,\n} from \"../../redux/actions/company\";\nimport { connect } from \"react-redux\";\nimport Layout, {\n  addNotification,\n  handleError,\n  showLoadingSpinner,\n  hideLoadingSpinner,\n} from \"../../components/Layout\";\nimport DataTable2 from \"../../components/DataTable2\";\nimport Switch from \"react-switch\";\nimport NumberFormat from \"react-number-format\";\n\nconst SetBillingForm = ({ formData, handleInput }) => (\n  <Form>\n    <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n      <Form.Label column sm=\"4\">\n        <span style={{ fontSize: \"13px\" }}>Amount</span>\n      </Form.Label>\n      <Col sm=\"8\">\n        <NumberFormat\n          required\n          className=\"form-control\"\n          prefix=\"Rp\"\n          value={formData.amount}\n          onValueChange={handleInput(\"amount\")}\n          thousandSeparator={\".\"}\n          decimalSeparator=\",\"\n          allowNegative={false}\n          isAllowed={(values) => {\n            const { floatValue } = values;\n            return floatValue > 0;\n          }}\n        />\n      </Col>\n    </Form.Group>\n  </Form>\n);\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false,\n      formData: {\n        amount: 0,\n      },\n      getCompaniesOpts: {\n        params: {\n          \"page[limit]\": 100,\n          include: \"company\",\n        },\n      },\n      editModalVisible: false,\n      confirmationModalVisible: false,\n      data: []\n    };\n  }\n\n  columns = [\n    {\n      Header: \"Company Name\",\n      accessor: \"attributes.business_name\",\n    },\n    {\n      Header: \"Email\",\n      accessor: \"attributes.email\",\n    },\n    {\n      Header: \"Status\",\n      accessor: \"attributes.activated\",\n      Cell: (props) => {\n        const activated =\n          props.cell.row.original.attributes.email_verified_at ? true : false;\n        return (\n          <Switch\n            checked={activated}\n            onChange={this.handleChange(props.cell.row.original)}\n            offColor=\"#c6c5c5\"\n            onColor=\"#86d4b3\"\n            onHandleColor=\"#0DAA66\"\n            offHandleColor=\"#F1F1F1\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            className=\"react-switch\"\n            id=\"material-switch\"\n          />\n        );\n      },\n    },\n  ];\n\n  async editData(data, index) {\n    let items = [...this.state.data];\n    data.status == \"Active\"\n      ? (data.status = \"Inactive\")\n      : (data.status = \"Active\");\n    items[index] = data;\n    this.setState({\n      data: items,\n    });\n  }\n\n  componentDidMount() {\n    // this.props.getUserCompany({\n    //   params: {\n    //     \"page[limit]\": 100,\n    //     include: \"company\",\n    //   },\n    // });\n    const { getCompaniesOpts } = this.state;\n    this.props.getCompanies(getCompaniesOpts);\n    \n    this.setState({\n      data: this.props.data.filter((user) => {return user.attributes.user_enterprise !== null})\n    })\n  }\n\n  closeEditModal = () => {\n    this.setState({\n      editModalVisible: false,\n    });\n  };\n\n  closeConfirmationModal = () => {\n    this.setState({\n      confirmationModalVisible: false,\n    });\n  };\n\n  handleChange = (row) => (e) => {\n    const { id, business_name, user_enterprise, email_verified_at } = row.attributes;\n    if (!email_verified_at) {\n      this.setState({\n        formData: {\n          ...this.state.formData,\n          id,\n          business_name,\n          activated: !email_verified_at ? true:false,\n        },\n        editModalVisible: true,\n      });\n    } else {\n      this.setState({\n        formData: {\n          ...this.state.formData,\n          id,\n          business_name,\n          activated: !email_verified_at ? true:false,\n        },\n        confirmationModalVisible: true,\n      });\n    }\n  };\n\n  handleInput = (key) => (e) => {\n    this.setState({\n      formData: {\n        ...this.state.formData,\n        [key]: e.floatValue,\n      },\n    });\n  };\n\n  handleSubmitEditCompany = async (e) => {\n    if (e) e.preventDefault();\n    const { formData, getCompaniesOpts } = this.state;\n    showLoadingSpinner();\n    try {      \n      if (formData.activated && formData.amount < 10000) {\n        throw {\n          message: \"Amount cannot be less than 10.000\",\n        };\n      }\n      await this.props.toggleStatusCompany(formData.id, formData);\n      await this.props.getCompanies(getCompaniesOpts);\n      let textNotification = formData.activated ? 'Activate' : 'Deactivate';\n      addNotification({\n        level: \"success\",\n        message: `${textNotification} company ${formData.business_name} successfully`,\n      });\n      this.setState({\n        editModalVisible: false,\n        confirmationModalVisible: false,\n      });\n    } catch (e) {\n      handleError(e);\n    }\n\n    hideLoadingSpinner();\n  };\n\n  render() {\n    const { formData } = this.state;\n    return (\n      <Layout title=\"Activation\" classname=\"dashboard theme-light\">\n        {/* Modal Edit Billing Invoice */}\n        <Modal\n          show={this.state.editModalVisible}\n          onHide={this.closeEditModal}\n          dialogClassName=\"modal-90w\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n          centered\n        >\n          <Modal.Header\n            closeButton\n            style={{ border: \"none\", paddingLeft: \"20px\" }}\n          >\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n              <small>Set Billing Invoice Monthly</small>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ padding: \"20px 30px 20px 30px\" }}>\n            <SetBillingForm\n              handleInput={this.handleInput}\n              formData={this.state.formData}\n            />\n          </Modal.Body>\n          <Modal.Footer style={{ border: \"none\" }}>\n            <Button\n              className=\"btn-secondary-semanggi\"\n              onClick={this.closeEditModal}\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"btn-success-semanggi\"\n              onClick={this.handleSubmitEditCompany}\n            >\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {/* Modal Confirmation */}\n        <Modal\n          show={this.state.confirmationModalVisible}\n          onHide={this.closeConfirmationModal}\n          dialogClassName=\"modal-90w\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n          centered\n        >\n          <Modal.Header\n            closeButton\n            style={{ border: \"none\", paddingLeft: \"20px\" }}\n          >\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n              <h3>Confirmation</h3>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{ padding: \"20px 30px 20px 30px\" }}>\n            <p>\n              Are you sure you want to deactivate the company{\" \"}\n              <b>{formData.business_name}</b>?\n            </p>\n          </Modal.Body>\n          <Modal.Footer style={{ border: \"none\" }}>\n            <Button\n              className=\"btn-secondary-semanggi\"\n              onClick={this.closeConfirmationModal}\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"btn-success-semanggi\"\n              onClick={this.handleSubmitEditCompany}\n            >\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Row>\n          <Col lg={12} md={12} sm={12}>\n            <Card style={{ backgroundColor: \"white\", borderRadius: \"10px\" }}>\n              <Row>\n                <Col xs={12}>\n                  <DataTable2\n                    data={this.props.data}\n                    columns={this.columns}\n                    showGlobalFilter={true}\n                    totalData={this.props.total}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { companies, include, total } = state.company;\n  // let newCompanies = companies.filter((user) => { return user.attributes.user_enterprise !== null});\n  // console.log(newCompanies)\n  return {\n    data: companies,\n    total,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCompanies: (opts) => dispatch(getCompanies(opts)),\n    toggleStatusCompany: (id, payload) =>\n      dispatch(toggleStatusCompany(id, payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n"]},"metadata":{},"sourceType":"module"}