{"ast":null,"code":"import PaymentService from \"../../service/payment\";\nexport const getPayment = opts => dispatch => {\n  return PaymentService.getPayment(opts).then(data => {\n    dispatch({\n      type: \"GET_PAYMENT\",\n      payload: {\n        data: data.data.data.data,\n        total: data.data.data.total\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const storePayment = (payload, opts = {}) => dispatch => {\n  return PaymentService.storePayment(payload, opts).then(data => {\n    dispatch({\n      type: \"STORE_PAYMENT\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const updatePayment = (id, payload, opts = {}) => dispatch => {\n  return PaymentService.updatePayment(id, payload, opts).then(data => {\n    dispatch({\n      type: \"UPDATE_PAYMENT\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const showPayment = (id, payload, opts = {}) => dispatch => {\n  return PaymentService.showPayment(id, payload, opts).then(data => {\n    dispatch({\n      type: \"SHOW_PAYMENT\",\n      payload: {\n        data: data.data\n      }\n    });\n    console.log(data);\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};\nexport const deletePayment = (id, opts = {}) => dispatch => {\n  return PaymentService.deletePayment(id, opts).then(data => {\n    dispatch({\n      type: \"DELETE_PAYMENT\"\n    });\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/redux/actions/payment.js"],"names":["PaymentService","getPayment","opts","dispatch","then","data","type","payload","total","Promise","resolve","error","reject","storePayment","updatePayment","id","showPayment","console","log","deletePayment"],"mappings":"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","sourcesContent":["import PaymentService from \"../../service/payment\";\n\nexport const getPayment = (opts) => (dispatch) => {\n    return PaymentService.getPayment(opts).then(\n    (data) => {\n      dispatch({\n          type: \"GET_PAYMENT\",\n          payload: {\n              data: data.data.data.data,\n              total: data.data.data.total,\n          }\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const storePayment = (payload, opts = {}) => (dispatch) => {\n    return PaymentService.storePayment(payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"STORE_PAYMENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updatePayment = (id, payload, opts = {}) => (dispatch) => {\n    return PaymentService.updatePayment(id, payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"UPDATE_PAYMENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const showPayment = (id, payload, opts = {}) => (dispatch) => {\n  return PaymentService.showPayment(id, payload, opts).then(\n  (data) => {\n    dispatch({\n        type: \"SHOW_PAYMENT\",\n        payload :{\n          data:data.data\n        }\n    })\n    console.log(data)\n    return Promise.resolve();\n  },\n  (error) => {\n    dispatch({\n      type: \"FAIL\",\n    });\n\n    return Promise.reject();\n  }\n);\n};\n\nexport const deletePayment = (id, opts = {}) => (dispatch) => {\n    return PaymentService.deletePayment(id, opts).then(\n    (data) => {\n      dispatch({\n          type: \"DELETE_PAYMENT\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}