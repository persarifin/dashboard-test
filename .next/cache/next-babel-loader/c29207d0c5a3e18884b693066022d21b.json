{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  companies: [],\n  include: {},\n  data: null,\n  companyIncluded: {},\n  total: 0\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"GET_COMPANY\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload.data,\n        companyIncluded: payload.included //   total: payload.total\n\n      });\n\n    case \"GET_ALL_COMPANY\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        companies: payload.data,\n        include: payload.included,\n        total: payload.total\n      });\n\n    case \"COMPANY_UPDATE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload.data\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/arifin/Documents/semanggi/semanggi-bo/src/redux/reducers/company.js"],"names":["initialState","companies","include","data","companyIncluded","total","state","action","type","payload","included"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,IAAI,EAAE,IAHa;AAInBC,EAAAA,eAAe,EAAE,EAJE;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAK,aAAL;AACE,6CACKF,KADL;AAEEH,QAAAA,IAAI,EAAEM,OAAO,CAACN,IAFhB;AAGEC,QAAAA,eAAe,EAAEK,OAAO,CAACC,QAH3B,CAIE;;AAJF;;AAMF,SAAK,iBAAL;AACE,6CACKJ,KADL;AAEEL,QAAAA,SAAS,EAAEQ,OAAO,CAACN,IAFrB;AAGED,QAAAA,OAAO,EAAEO,OAAO,CAACC,QAHnB;AAIEL,QAAAA,KAAK,EAAEI,OAAO,CAACJ;AAJjB;;AAMF,SAAK,gBAAL;AACE,6CACKC,KADL;AAEEH,QAAAA,IAAI,EAAEM,OAAO,CAACN;AAFhB;;AAKF;AACE,aAAOG,KAAP;AAtBJ;AAwBD","sourcesContent":["const initialState = {\n  companies: [],\n  include: {},\n  data: null,\n  companyIncluded: {},\n  total: 0,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case \"GET_COMPANY\":\n      return {\n        ...state,\n        data: payload.data,\n        companyIncluded: payload.included,\n        //   total: payload.total\n      };\n    case \"GET_ALL_COMPANY\":\n      return {\n        ...state,\n        companies: payload.data,\n        include: payload.included,\n        total: payload.total,\n      };\n    case \"COMPANY_UPDATE\":\n      return {\n        ...state,\n        data: payload.data,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}