{"ast":null,"code":"import PermissionService from \"../../service/permission\";\nimport { hideLoader, showLoader } from \"redux/actions/loader\";\nexport const getPermissions = opts => dispatch => {\n  return PermissionService.getPermissions(opts).then(response => {\n    dispatch(showLoader());\n    const roles = response.data && response.data.data ? response.data.data : [];\n    dispatch({\n      type: \"GET_PERMISSIONS\",\n      payload: {\n        data: roles\n      }\n    });\n    dispatch(hideLoader());\n    return Promise.resolve();\n  }, error => {\n    dispatch({\n      type: \"FAIL\"\n    });\n    return Promise.reject(error);\n  });\n};","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/redux/actions/permission.js"],"names":["PermissionService","hideLoader","showLoader","getPermissions","opts","dispatch","then","response","roles","data","type","payload","Promise","resolve","error","reject"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,sBAAvC;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAWC,QAAD,IAAc;AACpD,SAAOL,iBAAiB,CAACG,cAAlB,CAAiCC,IAAjC,EAAuCE,IAAvC,CACJC,QAAD,IAAc;AACZF,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACA,UAAMM,KAAK,GAAGD,QAAQ,CAACE,IAAT,IAAkBF,QAAQ,CAACE,IAAT,CAAcA,IAAhC,GAAuCF,QAAQ,CAACE,IAAT,CAAcA,IAArD,GAA4D,EAA1E;AACAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAE;AACPF,QAAAA,IAAI,EAAED;AADC;AAFF,KAAD,CAAR;AAMAH,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACA,WAAOW,OAAO,CAACC,OAAR,EAAP;AACD,GAZI,EAaJC,KAAD,IAAW;AACTT,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,WAAOE,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;AACD,GAnBI,CAAP;AAqBD,CAtBM","sourcesContent":["import PermissionService from \"../../service/permission\";\nimport { hideLoader, showLoader } from \"redux/actions/loader\";\n\nexport const getPermissions = (opts) => (dispatch) => {\n  return PermissionService.getPermissions(opts).then(\n    (response) => {\n      dispatch(showLoader());\n      const roles = response.data  && response.data.data ? response.data.data : [];\n      dispatch({\n        type: \"GET_PERMISSIONS\",\n        payload: {\n          data: roles\n        },\n      });\n      dispatch(hideLoader())\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject(error);\n    }\n  );\n};"]},"metadata":{},"sourceType":"module"}