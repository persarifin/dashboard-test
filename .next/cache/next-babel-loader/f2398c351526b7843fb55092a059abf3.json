{"ast":null,"code":"import UserService from \"../../service/user\";\nimport { hideLoadingSpinner } from \"components/Layout\";\nexport var getUser = function getUser(opts) {\n  return function (dispatch) {\n    return UserService.getUser(opts).then(function (data) {\n      dispatch({\n        type: \"GET_USER\",\n        payload: {\n          data: data.data.data.data,\n          total: data.data.data.total\n        }\n      });\n      console.log(data);\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    });\n  };\n};\nexport var storeUser = function storeUser(payload, opts) {\n  return function (dispatch) {\n    return UserService.storeUser(payload, opts).then(function (data) {\n      dispatch({\n        type: \"STORE_USER\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var updateUser = function updateUser(id, payload) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return function (dispatch) {\n    return UserService.updateUser(id, payload, opts).then(function (data) {\n      dispatch({\n        type: \"UPDATE_USER\"\n      });\n      return Promise.resolve();\n    }, function (error) {\n      dispatch({\n        type: \"FAIL\"\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var deleteUser = function deleteUser(id) {\n  return function (dispatch) {\n    return UserService.deleteUser(id).then(function (data) {\n      dispatch({\n        type: \"DELETE_USER\"\n      });\n    }, function (error) {\n      hideLoadingSpinner();\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/arifin/Documents/pretest/dashboard/src/redux/actions/user.js"],"names":["UserService","hideLoadingSpinner","getUser","opts","dispatch","then","data","type","payload","total","console","log","Promise","resolve","error","reject","storeUser","updateUser","id","deleteUser"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAc;AAC7C,WAAOJ,WAAW,CAACE,OAAZ,CAAoBC,IAApB,EAA0BE,IAA1B,CACL,UAACC,IAAD,EAAU;AACRF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,OAAO,EAAE;AACPF,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeA,IADd;AAEPG,UAAAA,KAAK,EAAEH,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeG;AAFf;AAFF,OAAD,CAAR;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,aAAOM,OAAO,CAACC,OAAR,EAAP;AACD,KAXI,EAYL,UAACC,KAAD,EAAW;AACTV,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAN,MAAAA,kBAAkB;AAClB,aAAOW,OAAO,CAACG,MAAR,EAAP;AACD,KAlBI,CAAP;AAoBD,GArBsB;AAAA,CAAhB;AAwBP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACR,OAAD,EAAUL,IAAV;AAAA,SAAmB,UAACC,QAAD,EAAc;AACxD,WAAOJ,WAAW,CAACgB,SAAZ,CAAsBR,OAAtB,EAA+BL,IAA/B,EAAqCE,IAArC,CACL,UAACC,IAAD,EAAU;AACRF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGA,aAAOK,OAAO,CAACC,OAAR,EAAP;AACD,KANI,EAOL,UAACC,KAAD,EAAW;AACTV,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAIA,aAAOK,OAAO,CAACG,MAAR,EAAP;AACD,KAbI,CAAP;AAeD,GAhBwB;AAAA,CAAlB;AAkBP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKV,OAAL;AAAA,MAAcL,IAAd,uEAAqB,EAArB;AAAA,SAA4B,UAACC,QAAD,EAAc;AAClE,WAAOJ,WAAW,CAACiB,UAAZ,CAAuBC,EAAvB,EAA2BV,OAA3B,EAAoCL,IAApC,EAA0CE,IAA1C,CACL,UAACC,IAAD,EAAU;AACRF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGA,aAAOK,OAAO,CAACC,OAAR,EAAP;AACD,KANI,EAOL,UAACC,KAAD,EAAW;AACTV,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAIA,aAAOK,OAAO,CAACG,MAAR,EAAP;AACD,KAbI,CAAP;AAeD,GAhByB;AAAA,CAAnB;AAkBP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACD,EAAD;AAAA,SAAQ,UAACd,QAAD,EAAc;AAC9C,WAAOJ,WAAW,CAACmB,UAAZ,CAAuBD,EAAvB,EAA2Bb,IAA3B,CACL,UAACC,IAAD,EAAU;AACRF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KALI,EAML,UAACO,KAAD,EAAW;AACTb,MAAAA,kBAAkB;AAClBS,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KATI,CAAP;AAWD,GAZyB;AAAA,CAAnB","sourcesContent":["import UserService from \"../../service/user\";\nimport { hideLoadingSpinner } from \"components/Layout\";\n\nexport const getUser = (opts) => (dispatch) => {\n  return UserService.getUser(opts).then(\n    (data) => {\n      dispatch({\n        type: \"GET_USER\",\n        payload: {\n          data: data.data.data.data,\n          total: data.data.data.total,\n        },\n      });\n      console.log(data)\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n      hideLoadingSpinner();\n      return Promise.reject();\n    }\n  );\n};\n\n\nexport const storeUser = (payload, opts) => (dispatch) => {\n  return UserService.storeUser(payload, opts).then(\n    (data) => {\n      dispatch({\n        type: \"STORE_USER\",\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateUser = (id, payload, opts = {}) => (dispatch) => {\n  return UserService.updateUser(id, payload, opts).then(\n    (data) => {\n      dispatch({\n          type: \"UPDATE_USER\",\n      })\n      return Promise.resolve();\n    },\n    (error) => {\n      dispatch({\n        type: \"FAIL\",\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const deleteUser = (id) => (dispatch) => {\n  return UserService.deleteUser(id).then(\n    (data) => {\n      dispatch({\n        type: \"DELETE_USER\",\n      });\n    },\n    (error) => {\n      hideLoadingSpinner();\n      console.log(error);\n    }\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}